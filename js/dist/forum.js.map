{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@clarkwinkelmann/discussion-lists/webpack/bootstrap","webpack://@clarkwinkelmann/discussion-lists/webpack/runtime/compat get default export","webpack://@clarkwinkelmann/discussion-lists/webpack/runtime/define property getters","webpack://@clarkwinkelmann/discussion-lists/webpack/runtime/hasOwnProperty shorthand","webpack://@clarkwinkelmann/discussion-lists/webpack/runtime/make namespace object","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/app']\"","webpack://@clarkwinkelmann/discussion-lists/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@clarkwinkelmann/discussion-lists/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/Model']\"","webpack://@clarkwinkelmann/discussion-lists/./src/forum/models/DiscussionList.ts","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/components/DiscussionPage']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/Dropdown']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/Component']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/Link']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/Select']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/EditListModal.ts","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/ListIcon.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/ListDropdownItem.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/ListDropdownContent.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/ListDropdown.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/addDiscussionControl.ts","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/states/DiscussionListState']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/states/GlobalSearchState']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/components/DiscussionList']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"((flarum.extensions['flamarkt-backoffice']||{})['common']||{})['components/Sortable']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"((flarum.extensions['flamarkt-backoffice']||{})['common']||{})['components/SortableHandle']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/helpers/avatar']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/helpers/username']\"","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/ListHero.ts","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/LinkButton']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/components/UserPage']\"","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/ListsUserPage.ts","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/models/Discussion']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/components/DiscussionHero']\"","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/Series.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/index.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/addIndexPage.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/addProfilePage.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/addSeries.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","import Model from 'flarum/common/Model';\nimport Discussion from 'flarum/common/models/Discussion';\nimport User from 'flarum/common/models/User';\n\nexport default class DiscussionList extends Model {\n    name = Model.attribute<string>('name')\n    visibility = Model.attribute<string>('visibility')\n    ordering = Model.attribute<string>('ordering')\n    discussionCount = Model.attribute<number>('discussionCount')\n    canEdit = Model.attribute<boolean>('canEdit')\n\n    user = Model.hasOne<User>('user')\n    discussions = Model.hasMany<Discussion>('discussions')\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/IndexPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Dropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Select'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","import app from 'flarum/forum/app';\nimport Modal, {IInternalModalAttrs} from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport Select from 'flarum/common/components/Select';\nimport Switch from 'flarum/common/components/Switch';\nimport extractText from 'flarum/common/utils/extractText';\nimport DiscussionList from '../models/DiscussionList';\n\ninterface EditListModalAttrs extends IInternalModalAttrs {\n    list?: DiscussionList\n    onsave?: () => void\n    ondelete?: () => void\n}\n\nexport default class EditListModal extends Modal<EditListModalAttrs> {\n    name: string = ''\n    visibility: string = 'private'\n    ordering: string = 'manual';\n    deleting: boolean = false\n\n    oninit(vnode: any) {\n        super.oninit(vnode);\n\n        if (this.attrs.list) {\n            this.name = this.attrs.list.name();\n            this.visibility = this.attrs.list.visibility();\n            this.ordering = this.attrs.list.ordering();\n        } else if (!app.forum.attribute('canCreatePrivateDiscussionLists')) {\n            if (app.forum.attribute('canCreatePublicDiscussionLists')) {\n                this.visibility = 'public';\n            } else {\n                this.visibility = 'series';\n            }\n        }\n    }\n\n    className() {\n        return 'EditDiscussionListModal Modal--small';\n    }\n\n    title() {\n        return app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.title');\n    }\n\n    content() {\n        const visibilityOptions: any = {};\n\n        if (app.forum.attribute('canCreatePrivateDiscussionLists')) {\n            visibilityOptions.private = app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.visibilityOptions.private');\n        }\n        if (app.forum.attribute('canCreatePublicDiscussionLists')) {\n            visibilityOptions.public = app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.visibilityOptions.public');\n        }\n        if (app.forum.attribute('canCreateSeriesDiscussionLists')) {\n            visibilityOptions.series = app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.visibilityOptions.series');\n        }\n\n\n        return m('.Modal-body', [\n            m('.Form-group', [\n                m('label', {\n                    for: 'edit-list-modal-name',\n                }, app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.name')),\n                m('input', {\n                    id: 'edit-list-modal-name',\n                    type: 'text',\n                    className: 'FormControl',\n                    value: this.name,\n                    onchange: (event: InputEvent) => {\n                        this.name = (event.target as HTMLInputElement).value;\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.visibility')),\n                Select.component({\n                    value: this.visibility,\n                    onchange: (value: string) => {\n                        this.visibility = value;\n                    },\n                    options: visibilityOptions,\n                    disabled: (\n                        (app.forum.attribute('canCreatePrivateDiscussionLists') ? 1 : 0) +\n                        (app.forum.attribute('canCreatePublicDiscussionLists') ? 1 : 0) +\n                        (app.forum.attribute('canCreateSeriesDiscussionLists') ? 1 : 0)\n                    ) <= 1,\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.ordering')),\n                Select.component({\n                    value: this.ordering,\n                    onchange: (value: string) => {\n                        this.ordering = value;\n                    },\n                    options: {\n                        manual: app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.orderingOptions.manual'),\n                        'created:asc': app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.orderingOptions.createdAsc'),\n                        'created:desc': app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.orderingOptions.createdDesc'),\n                        'added:asc': app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.orderingOptions.addedAsc'),\n                        'added:desc': app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.orderingOptions.addedDesc'),\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                Button.component({\n                    type: 'submit',\n                    className: 'Button Button--primary EditDiscussionListModal-save',\n                    loading: this.loading,\n                }, app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.save')),\n                this.attrs.list ? Button.component({\n                    type: 'button',\n                    className: 'Button EditDiscussionListModal-delete',\n                    onclick: () => {\n                        if (!confirm(extractText(app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.deleteConfirmation')))) {\n                            return;\n                        }\n\n                        this.deleting = true;\n\n                        this.attrs.list!.delete({\n                            errorHandler: this.onerror.bind(this),\n                        }).then(() => {\n                            this.hide();\n\n                            if (this.attrs.ondelete) {\n                                this.attrs.ondelete();\n                            }\n                        }, () => {\n                            this.deleting = false;\n                            m.redraw();\n                        });\n                    },\n                }, app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.delete')) : null,\n            ]),\n        ]);\n    }\n\n    onsubmit(event: Event) {\n        event.preventDefault();\n\n        this.loading = true;\n\n        (this.attrs.list || app.store.createRecord('discussion-lists')).save({\n            name: this.name,\n            visibility: this.visibility,\n            ordering: this.ordering,\n        }, {\n            errorHandler: this.onerror.bind(this),\n        }).then(() => {\n            this.hide();\n\n            if (this.attrs.onsave) {\n                this.attrs.onsave();\n            }\n        }, () => {\n            this.loading = false;\n            m.redraw();\n        });\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","import app from 'flarum/forum/app';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport icon from 'flarum/common/helpers/icon';\nimport extractText from 'flarum/common/utils/extractText';\nimport DiscussionList from '../models/DiscussionList';\n\ninterface ListIconAttrs extends ComponentAttrs {\n    list: DiscussionList\n}\n\nexport default class ListIcon extends Component<ListIconAttrs> {\n    view() {\n        let iconName: string | null = null;\n        let text: string | null = null;\n\n        switch (this.attrs.list.visibility()) {\n            case 'private':\n                iconName = 'fas fa-lock';\n                text = extractText(app.translator.trans('clarkwinkelmann-discussion-lists.forum.badge.private'));\n                break;\n            case 'series':\n                iconName = 'fas fa-list-ol';\n                text = extractText(app.translator.trans('clarkwinkelmann-discussion-lists.forum.badge.series'));\n                break;\n        }\n\n        if (!iconName) {\n            return null;\n        }\n\n        return [\n            ' ',\n            Tooltip.component({\n                text,\n            }, m('span.discussion-list-' + this.attrs.list.visibility(), icon(iconName))),\n        ]\n    }\n}\n","import app from 'flarum/forum/app';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport icon from 'flarum/common/helpers/icon';\nimport Discussion from 'flarum/common/models/Discussion';\nimport Button from 'flarum/common/components/Button';\nimport Link from 'flarum/common/components/Link';\nimport {ApiPayloadSingle} from 'flarum/common/Store';\nimport EditListModal from './EditListModal';\nimport DiscussionList from '../models/DiscussionList';\nimport ListIcon from './ListIcon';\n\nexport interface ListDropdownItemAttrs extends ComponentAttrs {\n    discussion: Discussion\n    list: DiscussionList\n    ondelete: () => void\n}\n\nexport default class ListDropdownItem extends Component<ListDropdownItemAttrs> {\n    loading: boolean = false\n\n    view() {\n        const {list, discussion} = this.attrs;\n\n        const active = (list.discussions() || []).indexOf(discussion) !== -1;\n\n        return m('li.DiscussionListsDropdownEntry', [\n            Button.component({\n                onclick: () => {\n                    this.loading = true;\n\n                    app.request<ApiPayloadSingle>({\n                        url: app.forum.attribute('apiUrl') + '/discussion-lists/' + list.id() + '/discussions/' + discussion.id(),\n                        method: active ? 'DELETE' : 'POST',\n                    }).then(payload => {\n                        // Will refresh the list of included discussions\n                        app.store.pushPayload(payload);\n\n                        this.loading = false;\n                        m.redraw();\n                    }).catch(error => {\n                        this.loading = false;\n                        m.redraw();\n\n                        throw error;\n                    });\n                },\n            }, icon(this.icon(active))),\n            Link.component({\n                href: app.route('discussionList', {\n                    list: list.id(),\n                }),\n            }, [\n                list.name(),\n                ListIcon.component({\n                    list,\n                }),\n            ]),\n            Button.component({\n                onclick: () => {\n                    app.modal.show(EditListModal, {\n                        list,\n                        ondelete: this.attrs.ondelete,\n                    });\n                },\n            }, icon('fas fa-pen')),\n        ]);\n    }\n\n    icon(active: boolean) {\n        if (this.loading) {\n            return 'fas fa-spinner fa-pulse';\n        }\n\n        if (active) {\n            return 'far fa-check-square';\n        }\n\n        return 'far fa-square';\n    }\n}\n","import app from 'flarum/forum/app';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Discussion from 'flarum/common/models/Discussion';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Button from 'flarum/common/components/Button';\nimport ListDropdownItem from './ListDropdownItem';\nimport DiscussionList from '../models/DiscussionList';\nimport EditListModal from './EditListModal';\n\nexport interface ListDropdownContentAttrs extends ComponentAttrs {\n    discussion: Discussion\n}\n\nexport default class ListDropdownContent extends Component<ListDropdownContentAttrs> {\n    lists!: DiscussionList[]\n    loading: boolean = true\n\n    oninit(vnode: any) {\n        super.oninit(vnode);\n\n        this.refresh();\n    }\n\n    refresh() {\n        this.loading = true;\n\n        app.store.find<DiscussionList[]>('discussion-lists', {\n            filter: {\n                user: app.session.user!.slug(),\n            },\n        }).then(lists => {\n            this.lists = lists;\n            this.loading = false;\n            m.redraw();\n        });\n    }\n\n    view() {\n        if (this.loading) {\n            return [\n                LoadingIndicator.component(),\n            ];\n        }\n\n        return [\n            ...this.lists.map(list => m(ListDropdownItem, {\n                discussion: this.attrs.discussion,\n                list,\n                ondelete: () => {\n                    this.refresh();\n                },\n            })),\n            m('li', Button.component({\n                onclick: () => {\n                    app.modal.show(EditListModal, {\n                        onsave: () => {\n                            this.refresh();\n                        },\n                    });\n                },\n                icon: 'fas fa-plus',\n            }, app.translator.trans('clarkwinkelmann-discussion-lists.forum.discussion.new'))),\n        ];\n    }\n}\n","import app from 'flarum/forum/app';\nimport {ComponentAttrs} from 'flarum/common/Component';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport Discussion from 'flarum/common/models/Discussion';\nimport ListDropdownContent from './ListDropdownContent';\n\nexport interface ListDropdownAttrs extends ComponentAttrs {\n    discussion: Discussion\n}\n\nexport default class ListDropdown extends Dropdown {\n    // Dropdown is not generic so we override our attrs type here for typescript\n    attrs!: ListDropdownAttrs\n\n    static initAttrs(attrs: any) {\n        super.initAttrs(attrs);\n\n        attrs.className = 'DiscussionListsDropdown';\n        attrs.buttonClassName = 'Button';\n        attrs.icon = 'fas fa-list-ol';\n        attrs.label = app.translator.trans('clarkwinkelmann-discussion-lists.forum.discussion.add');\n        attrs.lazyDraw = true; // Not actually used because of our changes to view below\n    }\n\n    // We need to override view to change itemCount to be at least 1, otherwise the button doesn't render as block\n    // Since we override it we can also remove the listItems() code which is unneeded from our changes in getMenu\n    // We can also bypass lazyDraw and directly do the lazyDraw logic instead of re-implementing the choice\n    view(vnode: any) {\n        return m('div', {\n            className: 'ButtonGroup Dropdown dropdown ' + this.attrs.className + ' itemCount1' + (this.showing ? ' open' : '')\n        }, [\n            this.getButton(vnode.children),\n            this.showing && this.getMenu([]),\n        ]);\n    }\n\n    // We need to override getMenu and cannot reuse Dropdown as-it because otherwise we get <li> wrapped in other <li>s\n    getMenu(items: any) {\n        return m('ul.Dropdown-menu.dropdown-menu', {\n            // Prevent the dropdown from closing when clicks happen inside if it\n            onclick(event: MouseEvent) {\n                event.stopPropagation();\n                event.redraw = false;\n            },\n        }, ListDropdownContent.component({\n            discussion: this.attrs.discussion,\n        }));\n    }\n}\n","import {extend} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\nimport ListDropdown from './components/ListDropdown';\n\nfunction listsSupported() {\n    if (!app.session.user) {\n        return false;\n    }\n\n    return app.forum.attribute('canCreatePrivateDiscussionLists') ||\n        app.forum.attribute('canCreatePublicDiscussionLists') ||\n        app.forum.attribute('canCreateSeriesDiscussionLists');\n}\n\nexport default function () {\n    // Control visible on the discussion page\n    extend(DiscussionPage.prototype, 'sidebarItems', function (items) {\n        if (!listsSupported()) {\n            return;\n        }\n\n        items.add('lists', ListDropdown.component({\n            discussion: this.discussion,\n        }), 75);\n    });\n\n    if ('v17development/blog/pages/BlogItem' in flarum.core.compat) {\n        extend(flarum.core.compat['v17development/blog/pages/BlogItem'].prototype, 'contentItems', function (items) {\n            if (!listsSupported() || !this.article) {\n                return;\n            }\n\n            items.add('lists', m('.FlarumBlog-Article-Content-Lists-Button', ListDropdown.component({\n                discussion: this.article,\n            })), 78); // Just below the edit controls that admins can see\n        });\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/DiscussionListState'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/GlobalSearchState'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = ((flarum.extensions['flamarkt-backoffice']||{})['common']||{})['components/Sortable'];","const __WEBPACK_NAMESPACE_OBJECT__ = ((flarum.extensions['flamarkt-backoffice']||{})['common']||{})['components/SortableHandle'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/avatar'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/username'];","import app from 'flarum/forum/app';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport Link from 'flarum/common/components/Link';\nimport avatar from 'flarum/common/helpers/avatar';\nimport username from 'flarum/common/helpers/username';\nimport DiscussionList from '../models/DiscussionList';\nimport EditListModal from './EditListModal';\nimport ListIcon from './ListIcon';\n\ninterface ListHeroAttrs extends ComponentAttrs {\n    list: DiscussionList\n}\n\nexport default class ListHero extends Component<ListHeroAttrs> {\n    view() {\n        const {list} = this.attrs;\n\n        const user = list.user();\n\n        return m('header.Hero.ListHero', m('.container', [\n            list.canEdit() ? Button.component({\n                className: 'Button Button--icon ListHero-Edit',\n                icon: 'fas fa-pen',\n                onclick() {\n                    app.modal.show(EditListModal, {\n                        list,\n                        onsave() {\n                            app.discussions.refresh();\n                        },\n                        ondelete() {\n                            m.route.set(app.route('index'));\n                        },\n                    });\n                },\n            }) : null,\n            m('h2.Hero-title', [\n                list.name(),\n                ListIcon.component({\n                    list,\n                }),\n            ]),\n            user ? m('.Hero-author', [\n                avatar(user),\n                ' ',\n                Link.component({\n                    href: app.route.user(user),\n                }, username(user)),\n            ]) : null,\n        ]));\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LinkButton'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserPage'];","import app from 'flarum/forum/app';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Link from 'flarum/common/components/Link';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport DiscussionList from '../models/DiscussionList';\nimport ListIcon from './ListIcon';\n\nexport default class ListsUserPage extends UserPage {\n    lists: DiscussionList[] = []\n    loading: boolean = false\n\n    oninit(vnode: any) {\n        super.oninit(vnode);\n\n        this.loadUser(m.route.param('username'));\n    }\n\n    show(user: any) {\n        super.show(user);\n\n        this.refresh();\n    }\n\n    refresh() {\n        this.loading = true;\n        this.lists = [];\n\n        m.redraw();\n\n        app.store.find<DiscussionList[]>('discussion-lists', {\n            filter: {\n                user: this.user.slug(),\n            },\n        }).then(lists => {\n            this.lists = lists;\n            this.loading = false;\n            m.redraw();\n        }, () => {\n            this.loading = false;\n            m.redraw();\n        });\n    }\n\n    content() {\n        if (this.loading) {\n            return LoadingIndicator.component();\n        }\n\n        return m('ul', this.lists.map(list => m('li', Link.component({\n            href: app.route('discussionList', {\n                list: list.id(),\n            }),\n        }, [\n            list.name(),\n            ListIcon.component({\n                list,\n            }),\n            ' ',\n            m('span.discussion-list-count', '(' + list.discussionCount() + ')'),\n        ]))));\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Discussion'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionHero'];","import app from 'flarum/forum/app';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Link from 'flarum/common/components/Link';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport Discussion from 'flarum/common/models/Discussion';\nimport DiscussionList from '../models/DiscussionList';\n\ninterface SeriesAttrs extends ComponentAttrs {\n    className?: string\n    currentDiscussion?: Discussion\n    list: DiscussionList\n}\n\nexport default class Series extends Component<SeriesAttrs> {\n    view() {\n        const {list} = this.attrs;\n\n        return m('nav.DiscussionListSeries', {\n            className: this.attrs.className,\n        }, [\n            list.canEdit() ? LinkButton.component({\n                className: 'Button Button--icon DiscussionListSeries-Edit',\n                icon: 'fas fa-pen',\n                href: app.route('discussionList', {\n                    list: list.id(),\n                }),\n            }) : null,\n            m('h3', list.name()),\n            m('ol', (list.discussions() || []).map(discussion => {\n                // Shouldn't happen, but Typescript\n                if (!discussion) {\n                    return null;\n                }\n\n                if (discussion === this.attrs.currentDiscussion) {\n                    return m('li.active', discussion.title());\n                }\n\n                return m('li', Link.component({\n                    href: app.route.discussion(discussion),\n                }, discussion.title()))\n            })),\n        ]);\n    }\n}\n","import app from 'flarum/forum/app';\nimport DiscussionList from './models/DiscussionList';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport addDiscussionControl from './addDiscussionControl';\nimport addIndexPage from './addIndexPage';\nimport addProfilePage from './addProfilePage';\nimport addSeries from './addSeries';\n\napp.initializers.add('clarkwinkelmann-discussion-lists', () => {\n    app.store.models['discussion-lists'] = DiscussionList;\n\n    app.routes.discussionList = { path: '/discussion-lists/:list', component: IndexPage };\n\n    addDiscussionControl();\n    addIndexPage();\n    addProfilePage();\n    addSeries();\n});\n","import app from 'flarum/forum/app';\nimport type Mithril from 'mithril';\nimport {extend, override} from 'flarum/common/extend';\nimport {ApiPayloadSingle} from 'flarum/common/Store';\nimport Discussion from 'flarum/common/models/Discussion';\nimport {ComponentAttrs} from 'flarum/common/Component';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport DiscussionListState from 'flarum/forum/states/DiscussionListState';\nimport GlobalSearchState from 'flarum/forum/states/GlobalSearchState';\nimport DiscussionList from 'flarum/forum/components/DiscussionList';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport Sortable from 'flamarkt/backoffice/common/components/Sortable';\nimport SortableHandle from 'flamarkt/backoffice/common/components/SortableHandle';\nimport ListHero from './components/ListHero';\nimport ListModel from './models/DiscussionList';\n\n// Implementation based on Tag's addTagFilter\nexport default function () {\n    IndexPage.prototype.currentList = function () {\n        if (this.currentActiveList) {\n            return this.currentActiveList;\n        }\n\n        const id = app.search.params().list;\n\n        if (!id) {\n            return null;\n        }\n\n        const list = app.store.getById('discussion-lists', id);\n\n        if (list) {\n            this.currentActiveList = list;\n            return this.currentActiveList;\n        }\n\n        if (this.currentListLoading) {\n            return null;\n        }\n\n        this.currentListLoading = true;\n\n        app.store\n            .find('discussion-lists', id)\n            .then(list => {\n                this.currentActiveList = list;\n\n                m.redraw();\n            })\n            .finally(() => {\n                this.currentListLoading = false;\n            });\n\n        return null;\n    };\n\n    override(IndexPage.prototype, 'hero', function (original) {\n        const list = this.currentList();\n\n        if (!list) {\n            return original();\n        }\n\n        return m(ListHero, {\n            list,\n        });\n    });\n\n    extend(IndexPage.prototype, 'view', function (vdom: Mithril.Vnode<ComponentAttrs, {}>) {\n        const list = this.currentList();\n\n        if (!list) {\n            return;\n        }\n\n        (vdom.attrs as any).className += ' IndexPage--list' + list.id();\n    });\n\n    extend(IndexPage.prototype, 'setTitle', function () {\n        const list = this.currentList();\n\n        if (list) {\n            app.setTitle(list.name());\n        }\n    });\n\n    extend(GlobalSearchState.prototype, 'params', function (params) {\n        params.list = m.route.param('list');\n    });\n\n    extend(DiscussionListState.prototype, 'requestParams', function (this: DiscussionListState, params) {\n        if (this.params.list) {\n            const filter = params.filter ?? {};\n            filter.list = this.params.list;\n            const q = filter.q;\n            if (q) {\n                filter.q = `${q} list:${this.params.list}`;\n            }\n            params.filter = filter;\n\n            // Push page limit to the maximum to allow for manual sorting\n            const page = params.page ?? {};\n            page.limit = 50;\n            params.page = page;\n        }\n    });\n\n    override(DiscussionListState.prototype, 'sortMap', function (this: DiscussionListState, original) {\n        const originalMap = original();\n\n        if (!this.params.list) {\n            return originalMap;\n        }\n\n        const newList: any = {\n            discussionListDefault: '',\n        };\n\n        Object.keys(originalMap).forEach(key => {\n            if (originalMap[key]) {\n                newList[key] = originalMap[key];\n            }\n        });\n\n        return newList;\n    });\n\n    override(DiscussionList.prototype, 'view', function (this: any, original) {\n        const vdom = original() as any;\n\n        const state = this.attrs.state as DiscussionListState;\n\n        // If not on the lists page, change nothing\n        // Same if a manual sort has been applied to the page\n        if (!state.getParams().list || state.getParams().sort) {\n            return vdom;\n        }\n\n        const list = app.store.getById<ListModel>('discussion-lists', state.getParams().list);\n\n        if (!list || list.ordering() !== 'manual' || !list.canEdit()) {\n            return vdom;\n        }\n\n        // If the vdom doesn't look like a fully rendered feed, keep is like original\n        if (!vdom.children.length || !vdom.children[0] && !vdom.children[0].attrs && vdom.children[0].attrs.role !== 'feed') {\n            return vdom;\n        }\n\n        const sortableChildren: any = [];\n\n        // We need to flatten the children for use in Sortable\n        vdom.children[0].children.forEach(child => {\n            if (!child) {\n                return;\n            }\n\n            if (child.tag === '[') {\n                sortableChildren.push(...child.children);\n            } else {\n                sortableChildren.push(child);\n            }\n        });\n\n        return m('div', {\n            className: vdom.attrs.className,\n        }, {\n            // Manually build the component for Sortable in the vdom\n            // So we can apply the existing children\n            tag: Sortable,\n            attrs: {\n                containerTag: 'ul[role=feed][aria-busy=false].' + (vdom.children[0].attrs.className).replace(' ', '.'),\n                placeholderTag: 'li.DiscussionListSortablePlaceholder',\n                onsort(origin: number, destination: number) {\n                    const allVisibleDiscussions: Discussion[] = ([] as Discussion[]).concat(...state.getPages().map(page => {\n                        return page.items;\n                    }));\n\n                    const discussion = allVisibleDiscussions[origin];\n\n                    if (discussion && list) {\n                        app.request<ApiPayloadSingle>({\n                            url: app.forum.attribute('apiUrl') + '/discussion-lists/' + list.id() + '/discussions/' + discussion.id(),\n                            method: 'POST',\n                            body: {\n                                data: {\n                                    attributes: {\n                                        order: destination + 1, // 0-based to 1-based\n                                    },\n                                },\n                            },\n                        }).then(payload => {\n                            // Might not be necessary but we might as well do it in case you navigate back to a page that shows a summary with the discussion relationship\n                            app.store.pushPayload(payload);\n\n                            // This is a bit excessive to refresh the full list here but this is the easiest implementation\n                            app.discussions.refresh();\n                        });\n                    }\n                },\n            },\n            children: sortableChildren,\n        });\n    });\n\n    extend(DiscussionListItem.prototype, 'view', function (vdom) {\n        if (!this.attrs.params.list || this.attrs.params.sort) {\n            return;\n        }\n\n        const list = app.store.getById<ListModel>('discussion-lists', this.attrs.params.list);\n\n        if (!list || list.ordering() !== 'manual' || !list.canEdit()) {\n            return vdom;\n        }\n\n        vdom.children.forEach(child => {\n            if (child && child.attrs && child.attrs.className.indexOf('DiscussionListItem-content') !== -1) {\n                child.children.unshift(m(SortableHandle, {\n                    className: 'DiscussionListSortableHandle',\n                }));\n            }\n        });\n    });\n}\n","import app from 'flarum/forum/app';\nimport {extend} from 'flarum/common/extend';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport ListsUserPage from './components/ListsUserPage';\n\nexport default function () {\n    app.routes['user.discussionLists'] = {path: '/u/:username/discussion-lists', component: ListsUserPage};\n\n    extend(UserPage.prototype, 'navItems', function (items) {\n        if (!this.user.attribute('discussionListsTabVisible')) {\n            return;\n        }\n\n        items.add('discussionLists', LinkButton.component({\n            href: app.route('user.discussionLists', {username: this.user.slug()}),\n            name: 'mentions',\n            icon: 'fas fa-list-ol',\n        }, app.translator.trans('clarkwinkelmann-discussion-lists.forum.profile.link')), 10);\n    });\n}\n","import {extend} from 'flarum/common/extend';\nimport Model from 'flarum/common/Model';\nimport Discussion from 'flarum/common/models/Discussion';\nimport DiscussionHero from 'flarum/forum/components/DiscussionHero';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport DiscussionList from './models/DiscussionList';\nimport Series from './components/Series';\n\nexport default function () {\n    Discussion.prototype.seriesDiscussionLists = Model.hasMany('seriesDiscussionLists');\n\n    extend(DiscussionHero.prototype, 'items', function (this: any, items) {\n        (this.attrs.discussion.seriesDiscussionLists() || []).forEach((list: DiscussionList) => {\n            items.add('discussion-lists-series' + list.id(), Series.component({\n                list,\n                currentDiscussion: this.attrs.discussion,\n            }));\n        });\n    });\n\n    if ('v17development/blog/components/BlogItemSidebar' in flarum.core.compat) {\n        extend(flarum.core.compat['v17development/blog/components/BlogItemSidebar'].prototype, 'items', function (items: ItemList<any>) {\n            // All items have the same priority in the original extension, so we'll move author even more to the top so we can squeeze below it\n            items.setPriority('author', 50);\n\n            const {article} = this.attrs;\n\n            if (!article) {\n                return;\n            }\n\n            (article.seriesDiscussionLists() || []).forEach((list: DiscussionList) => {\n                items.add('discussion-lists-series' + list.id(), Series.component({\n                    className: 'BlogSideWidget',\n                    list,\n                    currentDiscussion: article,\n                }), 40);\n            });\n        });\n    }\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","create","constructor","DiscussionList","name","Model","visibility","ordering","discussionCount","canEdit","user","discussions","EditListModal","deleting","oninit","vnode","this","attrs","list","app","className","title","content","visibilityOptions","series","m","for","id","type","onchange","event","target","Select","options","disabled","manual","Button","loading","onclick","confirm","extractText","errorHandler","onerror","then","hide","ondelete","redraw","onsubmit","preventDefault","save","onsave","Modal","ListIcon","view","iconName","text","Tooltip","icon","Component","ListDropdownItem","discussion","active","indexOf","url","method","payload","error","Link","href","component","ListDropdownContent","lists","refresh","filter","LoadingIndicator","map","ListDropdown","initAttrs","buttonClassName","label","lazyDraw","showing","getButton","children","getMenu","items","stopPropagation","Dropdown","listsSupported","extensions","ListHero","route","set","avatar","username","ListsUserPage","loadUser","param","show","slug","UserPage","Series","LinkButton","currentDiscussion","path","IndexPage","extend","DiscussionPage","add","article","currentActiveList","currentListLoading","override","original","currentList","vdom","GlobalSearchState","params","DiscussionListState","q","page","limit","originalMap","newList","discussionListDefault","keys","forEach","state","getParams","sort","length","role","sortableChildren","child","tag","push","Sortable","containerTag","replace","placeholderTag","onsort","origin","destination","concat","getPages","body","data","attributes","order","DiscussionListItem","unshift","SortableHandle","attribute","Discussion","DiscussionHero","seriesDiscussionLists","setPriority"],"sourceRoot":""}