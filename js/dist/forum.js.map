{"version":3,"file":"forum.js","mappings":"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","sources":["webpack://@clarkwinkelmann/discussion-lists/webpack/bootstrap","webpack://@clarkwinkelmann/discussion-lists/webpack/runtime/compat get default export","webpack://@clarkwinkelmann/discussion-lists/webpack/runtime/define property getters","webpack://@clarkwinkelmann/discussion-lists/webpack/runtime/hasOwnProperty shorthand","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/app']\"","webpack://@clarkwinkelmann/discussion-lists/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@clarkwinkelmann/discussion-lists/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/Model']\"","webpack://@clarkwinkelmann/discussion-lists/./src/forum/models/DiscussionList.ts","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/components/DiscussionPage']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/Dropdown']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/Component']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/Link']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/Select']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/EditListModal.ts","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/Tooltip']\"","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/ListIcon.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/ListDropdownItem.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/ListDropdownContent.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/ListDropdown.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/addDiscussionControl.ts","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/states/DiscussionListState']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/states/GlobalSearchState']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/components/DiscussionList']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"((flarum.extensions['flamarkt-backoffice']||{})['common']||{})['components/Sortable']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"((flarum.extensions['flamarkt-backoffice']||{})['common']||{})['components/SortableHandle']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/helpers/avatar']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/helpers/username']\"","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/ListHero.ts","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/LinkButton']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/components/UserPage']\"","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/ListsUserPage.ts","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/models/Discussion']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/components/DiscussionHero']\"","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/Series.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/SeriesNav.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/index.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/addIndexPage.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/addProfilePage.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/addSeries.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","import Model from 'flarum/common/Model';\nimport Discussion from 'flarum/common/models/Discussion';\nimport User from 'flarum/common/models/User';\n\nexport default class DiscussionList extends Model {\n    name = Model.attribute<string>('name')\n    visibility = Model.attribute<string>('visibility')\n    ordering = Model.attribute<string>('ordering')\n    discussionCount = Model.attribute<number>('discussionCount')\n    canEdit = Model.attribute<boolean>('canEdit')\n\n    user = Model.hasOne<User>('user')\n    discussions = Model.hasMany<Discussion>('discussions')\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/IndexPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Dropdown'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Select'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","import app from 'flarum/forum/app';\nimport Modal, {IInternalModalAttrs} from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport Select from 'flarum/common/components/Select';\nimport Switch from 'flarum/common/components/Switch';\nimport extractText from 'flarum/common/utils/extractText';\nimport DiscussionList from '../models/DiscussionList';\n\ninterface EditListModalAttrs extends IInternalModalAttrs {\n    list?: DiscussionList\n    onsave?: () => void\n    ondelete?: () => void\n}\n\nexport default class EditListModal extends Modal<EditListModalAttrs> {\n    name: string = ''\n    visibility: string = 'private'\n    ordering: string = 'manual';\n    deleting: boolean = false\n\n    oninit(vnode: any) {\n        super.oninit(vnode);\n\n        if (this.attrs.list) {\n            this.name = this.attrs.list.name();\n            this.visibility = this.attrs.list.visibility();\n            this.ordering = this.attrs.list.ordering();\n        } else if (!app.forum.attribute('canCreatePrivateDiscussionLists')) {\n            if (app.forum.attribute('canCreatePublicDiscussionLists')) {\n                this.visibility = 'public';\n            } else {\n                this.visibility = 'series';\n            }\n        }\n    }\n\n    className() {\n        return 'EditDiscussionListModal Modal--small';\n    }\n\n    title() {\n        return app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.title');\n    }\n\n    content() {\n        const visibilityOptions: any = {};\n\n        if (app.forum.attribute('canCreatePrivateDiscussionLists')) {\n            visibilityOptions.private = app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.visibilityOptions.private');\n        }\n        if (app.forum.attribute('canCreatePublicDiscussionLists')) {\n            visibilityOptions.public = app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.visibilityOptions.public');\n        }\n        if (app.forum.attribute('canCreateSeriesDiscussionLists')) {\n            visibilityOptions.series = app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.visibilityOptions.series');\n        }\n\n\n        return m('.Modal-body', [\n            m('.Form-group', [\n                m('label', {\n                    for: 'edit-list-modal-name',\n                }, app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.name')),\n                m('input', {\n                    id: 'edit-list-modal-name',\n                    type: 'text',\n                    className: 'FormControl',\n                    value: this.name,\n                    onchange: (event: InputEvent) => {\n                        this.name = (event.target as HTMLInputElement).value;\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.visibility')),\n                Select.component({\n                    value: this.visibility,\n                    onchange: (value: string) => {\n                        this.visibility = value;\n                    },\n                    options: visibilityOptions,\n                    disabled: (\n                        (app.forum.attribute('canCreatePrivateDiscussionLists') ? 1 : 0) +\n                        (app.forum.attribute('canCreatePublicDiscussionLists') ? 1 : 0) +\n                        (app.forum.attribute('canCreateSeriesDiscussionLists') ? 1 : 0)\n                    ) <= 1,\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.ordering')),\n                Select.component({\n                    value: this.ordering,\n                    onchange: (value: string) => {\n                        this.ordering = value;\n                    },\n                    options: {\n                        manual: app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.orderingOptions.manual'),\n                        'created:asc': app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.orderingOptions.createdAsc'),\n                        'created:desc': app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.orderingOptions.createdDesc'),\n                        'added:asc': app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.orderingOptions.addedAsc'),\n                        'added:desc': app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.orderingOptions.addedDesc'),\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                Button.component({\n                    type: 'submit',\n                    className: 'Button Button--primary EditDiscussionListModal-save',\n                    loading: this.loading,\n                }, app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.save')),\n                this.attrs.list ? Button.component({\n                    type: 'button',\n                    className: 'Button EditDiscussionListModal-delete',\n                    onclick: () => {\n                        if (!confirm(extractText(app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.deleteConfirmation')))) {\n                            return;\n                        }\n\n                        this.deleting = true;\n\n                        this.attrs.list!.delete({\n                            errorHandler: this.onerror.bind(this),\n                        }).then(() => {\n                            this.hide();\n\n                            if (this.attrs.ondelete) {\n                                this.attrs.ondelete();\n                            }\n                        }, () => {\n                            this.deleting = false;\n                            m.redraw();\n                        });\n                    },\n                }, app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.delete')) : null,\n            ]),\n        ]);\n    }\n\n    onsubmit(event: Event) {\n        event.preventDefault();\n\n        this.loading = true;\n\n        (this.attrs.list || app.store.createRecord('discussion-lists')).save({\n            name: this.name,\n            visibility: this.visibility,\n            ordering: this.ordering,\n        }, {\n            errorHandler: this.onerror.bind(this),\n        }).then(() => {\n            this.hide();\n\n            if (this.attrs.onsave) {\n                this.attrs.onsave();\n            }\n        }, () => {\n            this.loading = false;\n            m.redraw();\n        });\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Tooltip'];","import app from 'flarum/forum/app';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport icon from 'flarum/common/helpers/icon';\nimport extractText from 'flarum/common/utils/extractText';\nimport DiscussionList from '../models/DiscussionList';\n\ninterface ListIconAttrs extends ComponentAttrs {\n    list: DiscussionList\n}\n\nexport default class ListIcon extends Component<ListIconAttrs> {\n    view() {\n        let iconName: string | null = null;\n        let text: string | null = null;\n\n        switch (this.attrs.list.visibility()) {\n            case 'private':\n                iconName = 'fas fa-lock';\n                text = extractText(app.translator.trans('clarkwinkelmann-discussion-lists.forum.badge.private'));\n                break;\n            case 'series':\n                iconName = 'fas fa-list-ol';\n                text = extractText(app.translator.trans('clarkwinkelmann-discussion-lists.forum.badge.series'));\n                break;\n        }\n\n        if (!iconName) {\n            return null;\n        }\n\n        return [\n            ' ',\n            Tooltip.component({\n                text,\n            }, m('span.discussion-list-' + this.attrs.list.visibility(), icon(iconName))),\n        ]\n    }\n}\n","import app from 'flarum/forum/app';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport icon from 'flarum/common/helpers/icon';\nimport Discussion from 'flarum/common/models/Discussion';\nimport Button from 'flarum/common/components/Button';\nimport Link from 'flarum/common/components/Link';\nimport {ApiPayloadSingle} from 'flarum/common/Store';\nimport EditListModal from './EditListModal';\nimport DiscussionList from '../models/DiscussionList';\nimport ListIcon from './ListIcon';\n\nexport interface ListDropdownItemAttrs extends ComponentAttrs {\n    discussion: Discussion\n    list: DiscussionList\n    ondelete: () => void\n}\n\nexport default class ListDropdownItem extends Component<ListDropdownItemAttrs> {\n    loading: boolean = false\n\n    view() {\n        const {list, discussion} = this.attrs;\n\n        const active = (list.discussions() || []).indexOf(discussion) !== -1;\n\n        return m('li.DiscussionListsDropdownEntry', [\n            Button.component({\n                onclick: () => {\n                    this.loading = true;\n\n                    app.request<ApiPayloadSingle>({\n                        url: app.forum.attribute('apiUrl') + '/discussion-lists/' + list.id() + '/discussions/' + discussion.id(),\n                        method: active ? 'DELETE' : 'POST',\n                    }).then(payload => {\n                        // Will refresh the list of included discussions\n                        app.store.pushPayload(payload);\n\n                        this.loading = false;\n                        m.redraw();\n                    }).catch(error => {\n                        this.loading = false;\n                        m.redraw();\n\n                        throw error;\n                    });\n                },\n            }, icon(this.icon(active))),\n            Link.component({\n                href: app.route('discussionList', {\n                    list: list.id(),\n                }),\n            }, [\n                list.name(),\n                ListIcon.component({\n                    list,\n                }),\n            ]),\n            Button.component({\n                onclick: () => {\n                    app.modal.show(EditListModal, {\n                        list,\n                        ondelete: this.attrs.ondelete,\n                    });\n                },\n            }, icon('fas fa-pen')),\n        ]);\n    }\n\n    icon(active: boolean) {\n        if (this.loading) {\n            return 'fas fa-spinner fa-pulse';\n        }\n\n        if (active) {\n            return 'far fa-check-square';\n        }\n\n        return 'far fa-square';\n    }\n}\n","import app from 'flarum/forum/app';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Discussion from 'flarum/common/models/Discussion';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Button from 'flarum/common/components/Button';\nimport ListDropdownItem from './ListDropdownItem';\nimport DiscussionList from '../models/DiscussionList';\nimport EditListModal from './EditListModal';\n\nexport interface ListDropdownContentAttrs extends ComponentAttrs {\n    discussion: Discussion\n}\n\nexport default class ListDropdownContent extends Component<ListDropdownContentAttrs> {\n    lists!: DiscussionList[]\n    loading: boolean = true\n\n    oninit(vnode: any) {\n        super.oninit(vnode);\n\n        this.refresh();\n    }\n\n    refresh() {\n        this.loading = true;\n\n        app.store.find<DiscussionList[]>('discussion-lists', {\n            filter: {\n                user: app.session.user!.slug(),\n            },\n        }).then(lists => {\n            this.lists = lists;\n            this.loading = false;\n            m.redraw();\n        });\n    }\n\n    view() {\n        if (this.loading) {\n            return [\n                LoadingIndicator.component(),\n            ];\n        }\n\n        return [\n            ...this.lists.map(list => m(ListDropdownItem, {\n                discussion: this.attrs.discussion,\n                list,\n                ondelete: () => {\n                    this.refresh();\n                },\n            })),\n            m('li', Button.component({\n                onclick: () => {\n                    app.modal.show(EditListModal, {\n                        onsave: () => {\n                            this.refresh();\n                        },\n                    });\n                },\n                icon: 'fas fa-plus',\n            }, app.translator.trans('clarkwinkelmann-discussion-lists.forum.discussion.new'))),\n        ];\n    }\n}\n","import app from 'flarum/forum/app';\nimport {ComponentAttrs} from 'flarum/common/Component';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport Discussion from 'flarum/common/models/Discussion';\nimport ListDropdownContent from './ListDropdownContent';\n\nexport interface ListDropdownAttrs extends ComponentAttrs {\n    discussion: Discussion\n}\n\nexport default class ListDropdown extends Dropdown {\n    // Dropdown is not generic so we override our attrs type here for typescript\n    attrs!: ListDropdownAttrs\n\n    static initAttrs(attrs: any) {\n        super.initAttrs(attrs);\n\n        attrs.className = 'DiscussionListsDropdown';\n        attrs.buttonClassName = 'Button';\n        attrs.icon = 'fas fa-list-ol';\n        attrs.label = app.translator.trans('clarkwinkelmann-discussion-lists.forum.discussion.add');\n        attrs.lazyDraw = true; // Not actually used because of our changes to view below\n    }\n\n    // We need to override view to change itemCount to be at least 1, otherwise the button doesn't render as block\n    // Since we override it we can also remove the listItems() code which is unneeded from our changes in getMenu\n    // We can also bypass lazyDraw and directly do the lazyDraw logic instead of re-implementing the choice\n    view(vnode: any) {\n        return m('div', {\n            className: 'ButtonGroup Dropdown dropdown ' + this.attrs.className + ' itemCount1' + (this.showing ? ' open' : '')\n        }, [\n            this.getButton(vnode.children),\n            this.showing && this.getMenu([]),\n        ]);\n    }\n\n    // We need to override getMenu and cannot reuse Dropdown as-it because otherwise we get <li> wrapped in other <li>s\n    getMenu(items: any) {\n        return m('ul.Dropdown-menu.dropdown-menu', {\n            // Prevent the dropdown from closing when clicks happen inside if it\n            onclick(event: MouseEvent) {\n                event.stopPropagation();\n                event.redraw = false;\n            },\n        }, ListDropdownContent.component({\n            discussion: this.attrs.discussion,\n        }));\n    }\n}\n","import {extend} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\nimport ListDropdown from './components/ListDropdown';\n\nfunction listsSupported() {\n    if (!app.session.user) {\n        return false;\n    }\n\n    return app.forum.attribute('canCreatePrivateDiscussionLists') ||\n        app.forum.attribute('canCreatePublicDiscussionLists') ||\n        app.forum.attribute('canCreateSeriesDiscussionLists');\n}\n\nexport default function () {\n    // Control visible on the discussion page\n    extend(DiscussionPage.prototype, 'sidebarItems', function (items) {\n        if (!listsSupported()) {\n            return;\n        }\n\n        items.add('lists', ListDropdown.component({\n            discussion: this.discussion,\n        }), 75);\n    });\n\n    if ('v17development/blog/pages/BlogItem' in flarum.core.compat) {\n        extend(flarum.core.compat['v17development/blog/pages/BlogItem'].prototype, 'contentItems', function (items) {\n            if (!listsSupported() || !this.article) {\n                return;\n            }\n\n            items.add('lists', m('.FlarumBlog-Article-Content-Lists-Button', ListDropdown.component({\n                discussion: this.article,\n            })), 78); // Just below the edit controls that admins can see\n        });\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/DiscussionListState'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/GlobalSearchState'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = ((flarum.extensions['flamarkt-backoffice']||{})['common']||{})['components/Sortable'];","const __WEBPACK_NAMESPACE_OBJECT__ = ((flarum.extensions['flamarkt-backoffice']||{})['common']||{})['components/SortableHandle'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/avatar'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/username'];","import app from 'flarum/forum/app';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport Link from 'flarum/common/components/Link';\nimport avatar from 'flarum/common/helpers/avatar';\nimport username from 'flarum/common/helpers/username';\nimport DiscussionList from '../models/DiscussionList';\nimport EditListModal from './EditListModal';\nimport ListIcon from './ListIcon';\n\ninterface ListHeroAttrs extends ComponentAttrs {\n    list: DiscussionList\n}\n\nexport default class ListHero extends Component<ListHeroAttrs> {\n    view() {\n        const {list} = this.attrs;\n\n        const user = list.user();\n\n        return m('header.Hero.ListHero', m('.container', [\n            list.canEdit() ? Button.component({\n                className: 'Button Button--icon ListHero-Edit',\n                icon: 'fas fa-pen',\n                onclick() {\n                    app.modal.show(EditListModal, {\n                        list,\n                        onsave() {\n                            app.discussions.refresh();\n                        },\n                        ondelete() {\n                            m.route.set(app.route('index'));\n                        },\n                    });\n                },\n            }) : null,\n            m('h2.Hero-title', [\n                list.name(),\n                ListIcon.component({\n                    list,\n                }),\n            ]),\n            user ? m('.Hero-author', [\n                avatar(user),\n                ' ',\n                Link.component({\n                    href: app.route.user(user),\n                }, username(user)),\n            ]) : null,\n        ]));\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LinkButton'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserPage'];","import app from 'flarum/forum/app';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Link from 'flarum/common/components/Link';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport DiscussionList from '../models/DiscussionList';\nimport ListIcon from './ListIcon';\n\nexport default class ListsUserPage extends UserPage {\n    lists: DiscussionList[] = []\n    loading: boolean = false\n\n    oninit(vnode: any) {\n        super.oninit(vnode);\n\n        this.loadUser(m.route.param('username'));\n    }\n\n    show(user: any) {\n        super.show(user);\n\n        this.refresh();\n    }\n\n    refresh() {\n        this.loading = true;\n        this.lists = [];\n\n        m.redraw();\n\n        app.store.find<DiscussionList[]>('discussion-lists', {\n            filter: {\n                user: this.user.slug(),\n            },\n        }).then(lists => {\n            this.lists = lists;\n            this.loading = false;\n            m.redraw();\n        }, () => {\n            this.loading = false;\n            m.redraw();\n        });\n    }\n\n    content() {\n        if (this.loading) {\n            return LoadingIndicator.component();\n        }\n\n        return m('ul', this.lists.map(list => m('li', Link.component({\n            href: app.route('discussionList', {\n                list: list.id(),\n            }),\n        }, [\n            list.name(),\n            ListIcon.component({\n                list,\n            }),\n            ' ',\n            m('span.discussion-list-count', '(' + list.discussionCount() + ')'),\n        ]))));\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Discussion'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionHero'];","import app from 'flarum/forum/app';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport Link from 'flarum/common/components/Link';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport Tooltip from 'flarum/common/components/Tooltip';\nimport Discussion from 'flarum/common/models/Discussion';\nimport extractText from 'flarum/common/utils/extractText';\nimport DiscussionList from '../models/DiscussionList';\n\ninterface SeriesAttrs extends ComponentAttrs {\n    className?: string\n    currentDiscussion?: Discussion\n    list: DiscussionList\n}\n\nexport default class Series extends Component<SeriesAttrs> {\n    expand!: boolean\n\n    oninit(vnode: any) {\n        super.oninit(vnode);\n\n        this.expand = !app.forum.attribute('collapseDiscussionListsSeries');\n    }\n\n    view() {\n        const {list} = this.attrs;\n\n        return m('nav.DiscussionListSeries', {\n            className: this.attrs.className,\n        }, [\n            m('.DiscussionListSeriesHead', [\n                app.forum.attribute('collapseDiscussionListsSeries') ? Tooltip.component({\n                    text: extractText(app.translator.trans('clarkwinkelmann-discussion-lists.forum.series.expand')),\n                }, Button.component({\n                    className: 'Button Button--icon DiscussionListSeriesExpandButton',\n                    icon: 'fas fa-chevron-' + (this.expand ? 'up' : 'down'),\n                    onclick: () => {\n                        this.expand = !this.expand;\n                    },\n                })) : null,\n                m('h3', [\n                    list.name(),\n                    ' ',\n                    m('small', app.translator.trans('clarkwinkelmann-discussion-lists.forum.series.kind')),\n                ]),\n            ]),\n            this.expand ? [\n                m('ol', (list.discussions() || []).map(discussion => {\n                    // Shouldn't happen, but Typescript\n                    if (!discussion) {\n                        return null;\n                    }\n\n                    if (discussion === this.attrs.currentDiscussion) {\n                        return m('li.active', discussion.title());\n                    }\n\n                    return m('li', Link.component({\n                        href: app.route.discussion(discussion),\n                    }, discussion.title()))\n                })),\n                m('.DiscussionListSeriesVisit', LinkButton.component({\n                    className: 'Button',\n                    href: app.route('discussionList', {\n                        list: list.id(),\n                    }),\n                }, app.translator.trans('clarkwinkelmann-discussion-lists.forum.series.visit'))),\n            ] : null,\n        ]);\n    }\n}\n","import app from 'flarum/forum/app';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport Discussion from 'flarum/common/models/Discussion';\nimport DiscussionList from '../models/DiscussionList';\n\ninterface SeriesNavAttrs extends ComponentAttrs {\n    currentDiscussion: Discussion\n    list: DiscussionList\n}\n\nexport default class SeriesNav extends Component<SeriesNavAttrs> {\n    view() {\n        const discussions: Discussion[] = (this.attrs.list.discussions() || []).filter(discussionOrUndefined => !!discussionOrUndefined) as Discussion[];\n        const currentIndex = discussions.indexOf(this.attrs.currentDiscussion);\n\n        // This generally shouldn't happen. If the series is rendered the discussion must be in it\n        if (currentIndex === -1) {\n            return null;\n        }\n\n        return m('.SeriesNav', {\n            className: currentIndex > 0 ? '' : 'SeriesNav--only-next',\n        }, [\n            currentIndex > 0 ? this.link(discussions[currentIndex - 1], 'fas fa-angle-left', 'SeriesNav--prev') : null,\n            currentIndex < discussions.length - 1 ? this.link(discussions[currentIndex + 1], 'fas fa-angle-right', 'SeriesNav--next') : null,\n        ]);\n    }\n\n    link(discussion: Discussion, icon: string, className: string) {\n        return LinkButton.component({\n            className: 'Button ' + className,\n            href: app.route.discussion(discussion),\n            icon,\n        }, discussion.title());\n    }\n}\n","import app from 'flarum/forum/app';\nimport DiscussionList from './models/DiscussionList';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport addDiscussionControl from './addDiscussionControl';\nimport addIndexPage from './addIndexPage';\nimport addProfilePage from './addProfilePage';\nimport addSeries from './addSeries';\n\napp.initializers.add('clarkwinkelmann-discussion-lists', () => {\n    app.store.models['discussion-lists'] = DiscussionList;\n\n    app.routes.discussionList = { path: '/discussion-lists/:list', component: IndexPage };\n\n    addDiscussionControl();\n    addIndexPage();\n    addProfilePage();\n    addSeries();\n});\n","import app from 'flarum/forum/app';\nimport type Mithril from 'mithril';\nimport {extend, override} from 'flarum/common/extend';\nimport {ApiPayloadSingle} from 'flarum/common/Store';\nimport Discussion from 'flarum/common/models/Discussion';\nimport {ComponentAttrs} from 'flarum/common/Component';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport DiscussionListState from 'flarum/forum/states/DiscussionListState';\nimport GlobalSearchState from 'flarum/forum/states/GlobalSearchState';\nimport DiscussionList from 'flarum/forum/components/DiscussionList';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport Sortable from 'flamarkt/backoffice/common/components/Sortable';\nimport SortableHandle from 'flamarkt/backoffice/common/components/SortableHandle';\nimport ListHero from './components/ListHero';\nimport ListModel from './models/DiscussionList';\n\n// Implementation based on Tag's addTagFilter\nexport default function () {\n    IndexPage.prototype.currentList = function () {\n        if (this.currentActiveList) {\n            return this.currentActiveList;\n        }\n\n        const id = app.search.params().list;\n\n        if (!id) {\n            return null;\n        }\n\n        const list = app.store.getById<ListModel>('discussion-lists', id);\n\n        // Check that the user() relationship is loaded, otherwise request full load\n        // Since the user is not nullable this should work reliably\n        if (list && list.user()) {\n            this.currentActiveList = list;\n            return this.currentActiveList;\n        }\n\n        if (this.currentListLoading) {\n            return null;\n        }\n\n        this.currentListLoading = true;\n\n        app.store\n            .find<ListModel>('discussion-lists', id)\n            .then(list => {\n                this.currentActiveList = list;\n\n                m.redraw();\n            })\n            .finally(() => {\n                this.currentListLoading = false;\n            });\n\n        return null;\n    };\n\n    override(IndexPage.prototype, 'hero', function (original) {\n        const list = this.currentList();\n\n        if (!list) {\n            return original();\n        }\n\n        return m(ListHero, {\n            list,\n        });\n    });\n\n    extend(IndexPage.prototype, 'view', function (vdom: Mithril.Vnode<ComponentAttrs, {}>) {\n        const list = this.currentList();\n\n        if (!list) {\n            return;\n        }\n\n        (vdom.attrs as any).className += ' IndexPage--list' + list.id();\n    });\n\n    extend(IndexPage.prototype, 'setTitle', function () {\n        const list = this.currentList();\n\n        if (list) {\n            app.setTitle(list.name());\n        }\n    });\n\n    extend(GlobalSearchState.prototype, 'params', function (params) {\n        params.list = m.route.param('list');\n    });\n\n    extend(DiscussionListState.prototype, 'requestParams', function (this: DiscussionListState, params) {\n        if (this.params.list) {\n            const filter: any = params.filter ?? {};\n            filter.list = this.params.list;\n            const q = filter.q;\n            if (q) {\n                filter.q = `${q} list:${this.params.list}`;\n            }\n            params.filter = filter;\n\n            // Push page limit to the maximum to allow for manual sorting\n            const page = params.page ?? {};\n            page.limit = 50;\n            params.page = page;\n        }\n    });\n\n    override(DiscussionListState.prototype, 'sortMap', function (this: DiscussionListState, original) {\n        const originalMap = original();\n\n        if (!this.params.list) {\n            return originalMap;\n        }\n\n        const newList: any = {\n            discussionListDefault: '',\n        };\n\n        Object.keys(originalMap).forEach(key => {\n            if (originalMap[key]) {\n                newList[key] = originalMap[key];\n            }\n        });\n\n        return newList;\n    });\n\n    override(DiscussionList.prototype, 'view', function (this: any, original) {\n        const vdom = original() as any;\n\n        const state = this.attrs.state as DiscussionListState;\n\n        // If not on the lists page, change nothing\n        // Same if a manual sort has been applied to the page\n        if (!state.getParams().list || state.getParams().sort) {\n            return vdom;\n        }\n\n        const list = app.store.getById<ListModel>('discussion-lists', state.getParams().list);\n\n        if (!list || list.ordering() !== 'manual' || !list.canEdit()) {\n            return vdom;\n        }\n\n        // If the vdom doesn't look like a fully rendered feed, keep is like original\n        if (!vdom.children.length || !vdom.children[0] && !vdom.children[0].attrs && vdom.children[0].attrs.role !== 'feed') {\n            return vdom;\n        }\n\n        const sortableChildren: any = [];\n\n        // We need to flatten the children for use in Sortable\n        vdom.children[0].children.forEach(child => {\n            if (!child) {\n                return;\n            }\n\n            if (child.tag === '[') {\n                sortableChildren.push(...child.children);\n            } else {\n                sortableChildren.push(child);\n            }\n        });\n\n        return m('div', {\n            className: vdom.attrs.className,\n        }, {\n            // Manually build the component for Sortable in the vdom\n            // So we can apply the existing children\n            tag: Sortable,\n            attrs: {\n                containerTag: 'ul[role=feed][aria-busy=false].' + (vdom.children[0].attrs.className).replace(' ', '.'),\n                placeholderTag: 'li.DiscussionListSortablePlaceholder',\n                onsort(origin: number, destination: number) {\n                    const allVisibleDiscussions: Discussion[] = ([] as Discussion[]).concat(...state.getPages().map(page => {\n                        return page.items;\n                    }));\n\n                    const discussion = allVisibleDiscussions[origin];\n\n                    if (discussion && list) {\n                        app.request<ApiPayloadSingle>({\n                            url: app.forum.attribute('apiUrl') + '/discussion-lists/' + list.id() + '/discussions/' + discussion.id(),\n                            method: 'POST',\n                            body: {\n                                data: {\n                                    attributes: {\n                                        order: destination + 1, // 0-based to 1-based\n                                    },\n                                },\n                            },\n                        }).then(payload => {\n                            // Might not be necessary but we might as well do it in case you navigate back to a page that shows a summary with the discussion relationship\n                            app.store.pushPayload(payload);\n\n                            // This is a bit excessive to refresh the full list here but this is the easiest implementation\n                            app.discussions.refresh();\n                        });\n                    }\n                },\n            },\n            children: sortableChildren,\n        });\n    });\n\n    // contentItems is available since Flarum 1.8.6\n    extend(DiscussionListItem.prototype, 'contentItems', function (items) {\n        if (!this.attrs.params.list || this.attrs.params.sort) {\n            return;\n        }\n\n        const list = app.store.getById<ListModel>('discussion-lists', this.attrs.params.list);\n\n        if (!list || list.ordering() !== 'manual' || !list.canEdit()) {\n            return;\n        }\n\n        items.add('discussion-lists-sort', m(SortableHandle, {\n            className: 'DiscussionListSortableHandle',\n        }), 200);\n    });\n}\n","import app from 'flarum/forum/app';\nimport {extend} from 'flarum/common/extend';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport ListsUserPage from './components/ListsUserPage';\n\nexport default function () {\n    app.routes['user.discussionLists'] = {path: '/u/:username/discussion-lists', component: ListsUserPage};\n\n    extend(UserPage.prototype, 'navItems', function (items) {\n        if (!this.user.attribute('discussionListsTabVisible')) {\n            return;\n        }\n\n        items.add('discussionLists', LinkButton.component({\n            href: app.route('user.discussionLists', {username: this.user.slug()}),\n            name: 'mentions',\n            icon: 'fas fa-list-ol',\n        }, app.translator.trans('clarkwinkelmann-discussion-lists.forum.profile.link')), 10);\n    });\n}\n","import {extend} from 'flarum/common/extend';\nimport Model from 'flarum/common/Model';\nimport Discussion from 'flarum/common/models/Discussion';\nimport DiscussionHero from 'flarum/forum/components/DiscussionHero';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport DiscussionList from './models/DiscussionList';\nimport Series from './components/Series';\nimport SeriesNav from './components/SeriesNav';\n\nexport default function () {\n    Discussion.prototype.seriesDiscussionLists = Model.hasMany('seriesDiscussionLists');\n\n    extend(DiscussionHero.prototype, 'items', function (this: any, items) {\n        (this.attrs.discussion.seriesDiscussionLists() || []).forEach((list: DiscussionList) => {\n            items.add('discussion-lists-series' + list.id(), Series.component({\n                list,\n                currentDiscussion: this.attrs.discussion,\n            }));\n        });\n    });\n\n    if ('v17development/blog/components/BlogItemSidebar' in flarum.core.compat) {\n        extend(flarum.core.compat['v17development/blog/components/BlogItemSidebar'].prototype, 'items', function (items: ItemList<any>) {\n            // All items have the same priority in the original extension, so we'll move author even more to the top so we can squeeze below it\n            items.setPriority('author', 50);\n\n            const {article} = this.attrs;\n\n            if (!article) {\n                return;\n            }\n\n            (article.seriesDiscussionLists() || []).forEach((list: DiscussionList) => {\n                items.add('discussion-lists-series' + list.id(), Series.component({\n                    className: 'BlogSideWidget',\n                    list,\n                    currentDiscussion: article,\n                }), 40);\n            });\n        });\n    }\n\n    if ('v17development/blog/pages/BlogItem' in flarum.core.compat) {\n        extend(flarum.core.compat['v17development/blog/pages/BlogItem'].prototype, 'postItems', function (items: ItemList<any>) {\n            const lists = this.article?.seriesDiscussionLists() || [];\n\n            if (lists.length !== 1 || lists[0].discussionCount() < 2) {\n                return;\n            }\n\n            items.add('series-navigation', SeriesNav.component({\n                currentDiscussion: this.article,\n                list: lists[0],\n            }), -10);\n        });\n    }\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","_setPrototypeOf","t","e","setPrototypeOf","bind","__proto__","_inheritsLoose","create","constructor","DiscussionList","_Model","_this","_len","arguments","length","args","Array","_key","apply","concat","name","Model","visibility","ordering","discussionCount","canEdit","user","discussions","EditListModal","_Modal","deleting","_proto","oninit","vnode","this","attrs","list","app","attribute","className","title","trans","content","_this2","visibilityOptions","series","m","for","id","type","value","onchange","event","target","Select","options","disabled","manual","Button","loading","onclick","confirm","extractText","errorHandler","onerror","then","hide","ondelete","redraw","onsubmit","_this3","preventDefault","createRecord","save","onsave","Modal","ListIcon","_Component","view","iconName","text","Tooltip","icon","Component","ListDropdownItem","_this$attrs","discussion","active","indexOf","url","method","payload","pushPayload","error","Link","href","component","show","ListDropdownContent","lists","refresh","find","filter","slug","LoadingIndicator","map","ListDropdown","_Dropdown","initAttrs","buttonClassName","label","lazyDraw","showing","getButton","children","getMenu","items","stopPropagation","Dropdown","listsSupported","extensions","ListHero","route","set","avatar","username","ListsUserPage","_UserPage","loadUser","param","UserPage","Series","expand","currentDiscussion","LinkButton","SeriesNav","discussionOrUndefined","currentIndex","link","add","models","discussionList","path","IndexPage","extend","DiscussionPage","article","currentList","currentActiveList","params","getById","currentListLoading","override","original","vdom","GlobalSearchState","DiscussionListState","_params$filter","_params$page","q","page","limit","originalMap","newList","discussionListDefault","keys","forEach","state","getParams","sort","role","sortableChildren","child","tag","push","Sortable","containerTag","replace","placeholderTag","onsort","origin","destination","_ref","getPages","body","data","attributes","order","DiscussionListItem","SortableHandle","Discussion","seriesDiscussionLists","DiscussionHero","setPriority","_this$article"],"sourceRoot":""}