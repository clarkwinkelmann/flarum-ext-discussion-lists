{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,+BCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAzC,SAASC,EAAgBhB,EAAGiB,GAKzC,OAJAD,EAAkBf,OAAOiB,eAAiBjB,OAAOiB,eAAeC,OAAS,SAAyBnB,EAAGiB,GAEnG,OADAjB,EAAEoB,UAAYH,EACPjB,CACR,EACMgB,EAAgBhB,EAAGiB,EAC3B,CCLc,SAASI,EAAeC,EAAUC,GAC/CD,EAASf,UAAYN,OAAOuB,OAAOD,EAAWhB,WAC9Ce,EAASf,UAAUkB,YAAcH,EACjCJ,EAAeI,EAAUC,EAC1B,CCLD,MAAM,EAA+BV,OAAOC,KAAKC,OAAO,gB,aCGnCW,EAAAA,SAAAA,G,wIACjBC,KAAOC,IAAAA,UAAwB,Q,EAC/BC,SAAWD,IAAAA,UAAyB,Y,EACpCE,SAAWF,IAAAA,UAAwB,Y,EACnCG,gBAAkBH,IAAAA,UAAwB,mB,EAC1CI,QAAUJ,IAAAA,UAAyB,W,EAEnCK,YAAcL,IAAAA,QAA0B,e,kBAPvBF,CAAuBE,KCH5C,MAAM,EAA+Bf,OAAOC,KAAKC,OAAO,8B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,mC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,oB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,sC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,uB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,0B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,2B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCcnCmB,EAAAA,SAAAA,G,wIACjBP,KAAe,G,EACfE,UAAoB,E,EACpBC,SAAmB,S,EACnBK,UAAoB,E,oCAEpBC,OAAA,SAAOC,GACH,YAAMD,OAAN,UAAaC,GAETC,KAAKC,MAAMC,MACXF,KAAKX,KAAOW,KAAKC,MAAMC,KAAKb,OAC5BW,KAAKT,SAAWS,KAAKC,MAAMC,KAAKX,WAChCS,KAAKR,SAAWQ,KAAKC,MAAMC,KAAKV,YACxBW,IAAAA,MAAAA,UAAoB,qCAC5BH,KAAKT,UAAW,EAEvB,E,EAEDa,UAAA,WACI,MAAO,sCACV,E,EAEDC,MAAA,WACI,OAAOF,IAAAA,WAAAA,MAAqB,oDAC/B,E,EAEDG,QAAA,WAAU,WACN,OAAOC,EAAE,cAAe,CACpBA,EAAE,cAAe,CACbA,EAAE,QAAS,CACPC,IAAK,wBACNL,IAAAA,WAAAA,MAAqB,qDACxBI,EAAE,QAAS,CACPE,GAAI,uBACJC,KAAM,OACNN,UAAW,cACX9B,MAAO0B,KAAKX,KACZsB,SAAU,SAACC,GACP,EAAKvB,KAAQuB,EAAMC,OAA4BvC,KAClD,MAGTiC,EAAE,cAAe,CACbO,IAAAA,UAAiB,CACbC,MAAOf,KAAKT,SACZoB,SAAU,SAACK,GACP,EAAKzB,SAAWyB,CACnB,EACDC,SAAUd,IAAAA,MAAAA,UAAoB,oCAAsCA,IAAAA,MAAAA,UAAoB,oCACzFA,IAAAA,WAAAA,MAAqB,2DAE5BI,EAAE,cAAe,CACbA,EAAE,QAASJ,IAAAA,WAAAA,MAAqB,yDAChCe,IAAAA,UAAiB,CACb5C,MAAO0B,KAAKR,SACZmB,SAAU,SAACrC,GACP,EAAKkB,SAAWlB,CACnB,EACD6C,QAAS,CACLC,OAAQjB,IAAAA,WAAAA,MAAqB,sEAC7B,cAAeA,IAAAA,WAAAA,MAAqB,0EACpC,eAAgBA,IAAAA,WAAAA,MAAqB,2EACrC,YAAaA,IAAAA,WAAAA,MAAqB,wEAClC,aAAcA,IAAAA,WAAAA,MAAqB,8EAI/CI,EAAE,cAAe,CACbc,IAAAA,UAAiB,CACbX,KAAM,SACNN,UAAW,sDACXkB,QAAStB,KAAKsB,SACfnB,IAAAA,WAAAA,MAAqB,qDACxBH,KAAKC,MAAMC,KAAOmB,IAAAA,UAAiB,CAC/BX,KAAM,SACNN,UAAW,wCACXmB,QAAS,WACAC,QAAQC,IAAYtB,IAAAA,WAAAA,MAAqB,sEAI9C,EAAKN,UAAW,EAEhB,EAAKI,MAAMC,KAAX,OAAwB,CACpBwB,aAAc,EAAKC,QAAQ9C,KAAK,KACjC+C,MAAK,WACJ,EAAKC,OAED,EAAK5B,MAAM6B,UACX,EAAK7B,MAAM6B,UAElB,IAAE,WACC,EAAKjC,UAAW,EAChBU,EAAEwB,QACL,IACJ,GACF5B,IAAAA,WAAAA,MAAqB,uDAAyD,QAG5F,E,EAED6B,SAAA,SAASpB,GAAc,WACnBA,EAAMqB,iBAENjC,KAAKsB,SAAU,GAEdtB,KAAKC,MAAMC,MAAQC,IAAAA,MAAAA,aAAuB,qBAAqB+B,KAAK,CACjE7C,KAAMW,KAAKX,KACXE,SAAUS,KAAKT,SACfC,SAAUQ,KAAKR,UAChB,CACCkC,aAAc1B,KAAK2B,QAAQ9C,KAAKmB,QACjC4B,MAAK,WACJ,EAAKC,OAED,EAAK5B,MAAMkC,QACX,EAAKlC,MAAMkC,QAElB,IAAE,WACC,EAAKb,SAAU,EACff,EAAEwB,QACL,GACJ,E,EA1HgBnC,CAAsBwC,KCEtBC,EAAAA,SAAAA,G,wIACjBf,SAAmB,E,oCAEnBgB,KAAA,WAAO,WACH,EAA2BtC,KAAKC,MAAzBC,EAAP,EAAOA,KAAMqC,EAAb,EAAaA,WAEPC,GAA6D,KAAnDtC,EAAKP,eAAiB,IAAI8C,QAAQF,GAElD,OAAOhC,EAAE,KAAM,CACXc,IAAAA,UAAiB,CACbE,QAAS,WACL,EAAKD,SAAU,EAEfnB,IAAAA,QAA8B,CAC1BuC,IAAKvC,IAAAA,MAAAA,UAAoB,UAAY,qBAAuBD,EAAKO,KAAO,gBAAkB8B,EAAW9B,KACrGkC,OAAQH,EAAS,SAAW,SAC7BZ,MAAK,SAAAgB,GAEJzC,IAAAA,MAAAA,YAAsByC,GAEtB,EAAKtB,SAAU,EACff,EAAEwB,QACL,IATD,OASS,SAAAc,GAIL,MAHA,EAAKvB,SAAU,EACff,EAAEwB,SAEIc,CACT,GACJ,GACFC,IAAK9C,KAAK8C,KAAKN,KAClBO,IAAAA,UAAe,CACXC,KAAM7C,IAAAA,MAAU,iBAAkB,CAC9BD,KAAMA,EAAKO,QAEhB,CACCP,EAAKb,OACLa,EAAKX,WAAa,KAAO,CACrB,IACAgB,EAAE,+BAAgCuC,IAAK,mBAG/CzB,IAAAA,UAAiB,CACbE,QAAS,WACLpB,IAAAA,MAAAA,KAAeP,EAAe,CAC1BM,KAAAA,EACA4B,SAAU,EAAK7B,MAAM6B,UAE5B,GACFgB,IAAK,gBAEf,E,EAEDA,KAAA,SAAKN,GACD,OAAIxC,KAAKsB,QACE,0BAGPkB,EACO,sBAGJ,eACV,E,EA9DgBH,CAAyBY,KCHzBC,EAAAA,SAAAA,G,wIACjBC,WAAAA,E,EACA7B,SAAmB,E,oCAEnBxB,OAAA,SAAOC,GACH,YAAMD,OAAN,UAAaC,GAEbC,KAAKoD,SACR,E,EAEDA,QAAA,WAAU,WACNpD,KAAKsB,SAAU,EAEfnB,IAAAA,MAAAA,KAAiC,mBAAoB,CACjDkD,OAAQ,CACJC,KAAMnD,IAAAA,QAAAA,KAAAA,UAEXyB,MAAK,SAAAuB,GACJ,EAAKA,MAAQA,EACb,EAAK7B,SAAU,EACff,EAAEwB,QACL,GACJ,E,EAEDO,KAAA,WAAO,WACH,OAAItC,KAAKsB,QACE,CACHiC,IAAAA,aAID,GAAP,OACOvD,KAAKmD,MAAMK,KAAI,SAAAtD,GAAI,OAAIK,EAAE8B,EAAkB,CAC1CE,WAAY,EAAKtC,MAAMsC,WACvBrC,KAAAA,EACA4B,SAAU,WACN,EAAKsB,SACR,GALiB,IAD1B,CAQI/B,IAAAA,UAAiB,CACbE,QAAS,WACLpB,IAAAA,MAAAA,KAAeP,EAAe,CAC1BuC,OAAQ,WACJ,EAAKiB,SACR,GAER,EACDN,KAAM,eACP3C,IAAAA,WAAAA,MAAqB,2DAE/B,E,EAlDgB+C,CAA4BD,KCbjD,MAAM,EAA+B1E,OAAOC,KAAKC,OAAO,8B,ICEnCgF,EAAAA,SAAAA,G,4EACjBC,QAAA,SAAQC,GACJ,IAAMC,EAAO,EAAH,UAASF,QAAT,UAAiBC,GAS3B,OANCC,EAAK3D,MAAcsB,QAAU,SAAUX,GACpCA,EAAMiD,kBAENjD,EAAMmB,QAAS,CAClB,EAEM6B,CACV,E,EAZgBH,C,MAA8BK,ICFnD,MAAM,EAA+BvF,OAAOC,KAAKC,OAAO,oC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,kC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,mC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,uC,aCAxD,MAAM,IAAiCF,OAAOwF,WAAW,wBAAwB,CAAC,GAAW,QAAG,CAAC,GAAG,uB,aCApG,MAAM,IAAiCxF,OAAOwF,WAAW,wBAAwB,CAAC,GAAW,QAAG,CAAC,GAAG,6B,aCW/EC,EAAAA,SAAAA,G,4EACjB1B,KAAA,WACI,IAAOpC,EAAQF,KAAKC,MAAbC,KAEP,OAAOK,EAAE,uBAAwBA,EAAE,aAAcA,EAAE,mBAAoB,CACnEA,EAAE,gBAAiB,CACfL,EAAKb,OACLa,EAAKX,WAAa,KAAO,CACrB,IACAgB,EAAE,+BAAgCuC,IAAK,mBAG/C5C,EAAKR,UAAY2B,IAAAA,UAAiB,CAC9BE,QAD8B,WAE1BpB,IAAAA,MAAAA,KAAeP,EAAe,CAC1BM,KAAAA,EACAiC,OAF0B,WAGtBhC,IAAAA,YAAAA,SACH,EACD2B,SAL0B,WAMtBvB,EAAE0D,MAAMC,IAAI/D,IAAAA,MAAU,SACzB,GAER,GACF,QAAU,QAEpB,E,EA1BgB6D,CAAiBf,KCXtC,MAAM,EAA+B1E,OAAOC,KAAKC,OAAO,gC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,6B,cCOnC0F,GAAAA,SAAAA,G,wIACjBhB,MAA0B,G,EAC1B7B,SAAmB,E,oCAEnBxB,OAAA,SAAOC,GACH,YAAMD,OAAN,UAAaC,GAEbC,KAAKoE,SAAS7D,EAAE0D,MAAMI,MAAM,YAC/B,E,EAEDC,KAAA,SAAKhB,GACD,YAAMgB,KAAN,UAAWhB,GAEXtD,KAAKoD,SACR,E,EAEDA,QAAA,WAAU,WACNpD,KAAKsB,SAAU,EACftB,KAAKmD,MAAQ,GAEb5C,EAAEwB,SAEF5B,IAAAA,MAAAA,KAAiC,mBAAoB,CACjDkD,OAAQ,CACJC,KAAMtD,KAAKsD,KAAKiB,UAErB3C,MAAK,SAAAuB,GACJ,EAAKA,MAAQA,EACb,EAAK7B,SAAU,EACff,EAAEwB,QACL,IAAE,WACC,EAAKT,SAAU,EACff,EAAEwB,QACL,GACJ,E,EAEDzB,QAAA,WACI,OAAIN,KAAKsB,QACEiC,IAAAA,YAGJhD,EAAE,KAAMP,KAAKmD,MAAMK,KAAI,SAAAtD,GAAI,OAAIK,EAAE,KAAMwC,IAAAA,UAAe,CACzDC,KAAM7C,IAAAA,MAAU,iBAAkB,CAC9BD,KAAMA,EAAKO,QAEhB,CACCP,EAAKb,OACLa,EAAKX,WAAa,KAAO,CACrB,IACAgB,EAAE,+BAAgCuC,IAAK,iBAE3C,IACAvC,EAAE,6BAA8B,IAAML,EAAKT,kBAAoB,OAXjC,IAarC,E,EAtDgB0E,CAAsBK,MCA3CrE,IAAAA,aAAAA,IAAqB,oCAAoC,WACrDA,IAAAA,MAAAA,OAAAA,oBAAuCf,EAEvCe,IAAAA,OAAAA,eAA4B,CAAEsE,KAAM,0BAA2BC,UAAWC,MCM1EC,EAAAA,EAAAA,QAAOC,IAAAA,UAA0B,gBAAgB,SAAUlB,GATtDxD,IAAAA,QAAAA,OAIEA,IAAAA,MAAAA,UAAoB,mCAAqCA,IAAAA,MAAAA,UAAoB,qCAUhFwD,EAAMmB,IAAI,QAASrB,EAAsBiB,UAAU,CAC/CK,gBAAiB,SACjBjC,KAAM,iBACNkC,MAAO7E,IAAAA,WAAAA,MAAqB,yDAC5B8E,UAAU,GACX1E,EAAE2C,EAAqB,CACtBX,WAAYvC,KAAKuC,cAChB,GACR,ICXDoC,IAAAA,UAAAA,YAAkC,WAAY,WAC1C,GAAI3E,KAAKkF,kBACL,OAAOlF,KAAKkF,kBAGhB,IAAMzE,EAAKN,IAAAA,OAAAA,SAAoBD,KAE/B,IAAKO,EACD,OAAO,KAGX,IAAMP,EAAOC,IAAAA,MAAAA,QAAkB,mBAAoBM,GAEnD,OAAIP,GACAF,KAAKkF,kBAAoBhF,EAClBF,KAAKkF,oBAGZlF,KAAKmF,qBAITnF,KAAKmF,oBAAqB,EAE1BhF,IAAAA,MAAAA,KACU,mBAAoBM,GACzBmB,MAAK,SAAA1B,GACF,EAAKgF,kBAAoBhF,EAEzBK,EAAEwB,QACL,IANL,SAOa,WACL,EAAKoD,oBAAqB,CAC7B,KAdM,KAiBd,GAEDC,EAAAA,EAAAA,UAAST,IAAAA,UAAqB,QAAQ,SAAUU,GAC5C,IAAMnF,EAAOF,KAAKsF,cAElB,OAAKpF,EAIEK,EAAEyD,EAAU,CACf9D,KAAAA,IAJOmF,GAMd,KAEDT,EAAAA,EAAAA,QAAOD,IAAAA,UAAqB,QAAQ,SAAUf,GAC1C,IAAM1D,EAAOF,KAAKsF,cAEbpF,IAIJ0D,EAAK3D,MAAcG,WAAa,mBAAqBF,EAAKO,KAC9D,KAEDmE,EAAAA,EAAAA,QAAOD,IAAAA,UAAqB,YAAY,WACpC,IAAMzE,EAAOF,KAAKsF,cAEdpF,GACAC,IAAAA,SAAaD,EAAKb,OAEzB,KAEDuF,EAAAA,EAAAA,QAAOW,IAAAA,UAA6B,UAAU,SAAUC,GACpDA,EAAOtF,KAAOK,EAAE0D,MAAMI,MAAM,OAC/B,KAEDO,EAAAA,EAAAA,QAAOa,IAAAA,UAA+B,iBAAiB,SAAqCD,GACxF,GAAIxF,KAAKwF,OAAOtF,KAAM,SACZmD,EAAM,SAAGmC,EAAOnC,QAAV,EAAoB,CAAC,EACjCA,EAAOnD,KAAOF,KAAKwF,OAAOtF,KAC1B,IAAMwF,EAAIrC,EAAOqC,EACbA,IACArC,EAAOqC,EAAOA,EAAd,SAAwB1F,KAAKwF,OAAOtF,MAExCsF,EAAOnC,OAASA,EAGhB,IAAMsC,EAAI,SAAGH,EAAOG,MAAV,EAAkB,CAAC,EAC7BA,EAAKC,MAAQ,GACbJ,EAAOG,KAAOA,CACjB,CACJ,KAEDP,EAAAA,EAAAA,UAASK,IAAAA,UAA+B,WAAW,SAAqCJ,GACpF,IAAMQ,EAAcR,IAEpB,IAAKrF,KAAKwF,OAAOtF,KACb,OAAO2F,EAGX,IAAMC,EAAe,CACjBC,sBAAuB,IAS3B,OANApI,OAAOqI,KAAKH,GAAaI,SAAQ,SAAAxI,GACzBoI,EAAYpI,KACZqI,EAAQrI,GAAOoI,EAAYpI,GAElC,IAEMqI,CACV,KAEDV,EAAAA,EAAAA,UAAShG,IAAAA,UAA0B,QAAQ,SAAqBiG,GAC5D,IAAMzB,EAAOyB,IAEPtE,EAAQf,KAAKC,MAAMc,MAGzB,IAAKA,EAAMmF,YAAYhG,KACnB,OAAO0D,EAGX,IAAM1D,EAAOC,IAAAA,MAAAA,QAA6B,mBAAoBY,EAAMmF,YAAYhG,MAEhF,IAAKA,GAA4B,WAApBA,EAAKV,aAA4BU,EAAKR,UAC/C,OAAOkE,EAIX,IAAKA,EAAKuC,SAASC,SAAWxC,EAAKuC,SAAS,KAAOvC,EAAKuC,SAAS,GAAGlG,OAAyC,SAAhC2D,EAAKuC,SAAS,GAAGlG,MAAMoG,KAChG,OAAOzC,EAGX,IAAM0C,EAAwB,GAe9B,OAZA1C,EAAKuC,SAAS,GAAGA,SAASF,SAAQ,SAAAM,GACzBA,IAIa,MAAdA,EAAMC,IACNF,EAAiBG,KAAjB,MAAAH,EAAyBC,EAAMJ,UAE/BG,EAAiBG,KAAKF,GAE7B,IAEMhG,EAAE,MAAO,CACZH,UAAWwD,EAAK3D,MAAMG,WACvB,CAGCoG,IAAKE,IACLzG,MAAO,CACH0G,aAAc,kCAAqC/C,EAAKuC,SAAS,GAAGlG,MAAMG,UAAWwG,QAAQ,IAAK,KAClGC,eAAgB,uCAChBC,OAHG,SAGIC,EAAgBC,GAAqB,MAKlCzE,GAJuC,MAAoB0E,OAArB,QAA+BlG,EAAMmG,WAAW1D,KAAI,SAAAmC,GAC5F,OAAOA,EAAKhC,KACf,KAEwCoD,GAErCxE,GAAcrC,GACdC,IAAAA,QAA8B,CAC1BuC,IAAKvC,IAAAA,MAAAA,UAAoB,UAAY,qBAAuBD,EAAKO,KAAO,gBAAkB8B,EAAW9B,KACrGkC,OAAQ,OACRwE,KAAM,CACFC,MAAOJ,EAAc,KAE1BpF,MAAK,SAAAgB,GAEJzC,IAAAA,MAAAA,YAAsByC,GAGtBzC,IAAAA,YAAAA,SACH,GAER,GAELgG,SAAUG,GAEjB,KAED1B,EAAAA,EAAAA,QAAOyC,IAAAA,UAA8B,QAAQ,SAAUzD,GACnD,GAAK5D,KAAKC,MAAMuF,OAAOtF,KAAvB,CAIA,IAAMA,EAAOC,IAAAA,MAAAA,QAA6B,mBAAoBH,KAAKC,MAAMuF,OAAOtF,MAEhF,IAAKA,GAA4B,WAApBA,EAAKV,aAA4BU,EAAKR,UAC/C,OAAOkE,EAGXA,EAAKuC,SAASF,SAAQ,SAAAM,GACdA,GAASA,EAAMtG,QAA0E,IAAjEsG,EAAMtG,MAAMG,UAAUqC,QAAQ,+BACtD8D,EAAMJ,SAASmB,QAAQ/G,EAAEgH,IAAgB,CACrCnH,UAAW,iCAGtB,GAdA,CAeJ,ICnNDD,IAAAA,OAAAA,wBAAqC,CAACsE,KAAM,gCAAiCC,UAAWP,KAExFS,EAAAA,EAAAA,QAAOJ,KAAAA,UAAoB,YAAY,SAAUb,GACxC3D,KAAKsD,KAAKkE,UAAU,8BAIzB7D,EAAMmB,IAAI,kBAAmB2C,IAAAA,UAAqB,CAC9CzE,KAAM7C,IAAAA,MAAU,uBAAwB,CAACuH,SAAU1H,KAAKsD,KAAKiB,SAC7DlF,KAAM,WACNyD,KAAM,kBACP3C,IAAAA,WAAAA,MAAqB,wDAAyD,GACpF,GHJJ,G","sources":["webpack://@clarkwinkelmann/discussion-lists/webpack/bootstrap","webpack://@clarkwinkelmann/discussion-lists/webpack/runtime/compat get default export","webpack://@clarkwinkelmann/discussion-lists/webpack/runtime/define property getters","webpack://@clarkwinkelmann/discussion-lists/webpack/runtime/hasOwnProperty shorthand","webpack://@clarkwinkelmann/discussion-lists/webpack/runtime/make namespace object","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/app']\"","webpack://@clarkwinkelmann/discussion-lists/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@clarkwinkelmann/discussion-lists/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/Model']\"","webpack://@clarkwinkelmann/discussion-lists/./src/forum/models/DiscussionList.ts","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/components/DiscussionPage']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/Component']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/helpers/icon']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/Link']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/Select']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/Switch']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/EditListModal.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/ListDropdownItem.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/ListDropdownContent.ts","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/Dropdown']\"","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/DropdownThatStaysOpen.ts","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/states/DiscussionListState']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/states/GlobalSearchState']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/components/DiscussionList']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/components/DiscussionListItem']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"((flarum.extensions['flamarkt-backoffice']||{})['common']||{})['components/Sortable']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"((flarum.extensions['flamarkt-backoffice']||{})['common']||{})['components/SortableHandle']\"","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/ListHero.ts","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['common/components/LinkButton']\"","webpack://@clarkwinkelmann/discussion-lists/external root \"flarum.core.compat['forum/components/UserPage']\"","webpack://@clarkwinkelmann/discussion-lists/./src/forum/components/ListsUserPage.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/index.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/addDiscussionControl.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/addIndexPage.ts","webpack://@clarkwinkelmann/discussion-lists/./src/forum/addProfilePage.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","import Model from 'flarum/common/Model';\nimport Discussion from 'flarum/common/models/Discussion';\n\nexport default class DiscussionList extends Model {\n    name = Model.attribute<string>('name')\n    isPublic = Model.attribute<boolean>('isPublic')\n    ordering = Model.attribute<string>('ordering')\n    discussionCount = Model.attribute<number>('discussionCount')\n    canEdit = Model.attribute<boolean>('canEdit')\n\n    discussions = Model.hasMany<Discussion>('discussions')\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/IndexPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/icon'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Select'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Switch'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","import app from 'flarum/forum/app';\nimport Modal, {IInternalModalAttrs} from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport Select from 'flarum/common/components/Select';\nimport Switch from 'flarum/common/components/Switch';\nimport extractText from 'flarum/common/utils/extractText';\nimport DiscussionList from '../models/DiscussionList';\n\ninterface EditListModalAttrs extends IInternalModalAttrs {\n    list?: DiscussionList\n    onsave?: () => void\n    ondelete?: () => void\n}\n\nexport default class EditListModal extends Modal<EditListModalAttrs> {\n    name: string = ''\n    isPublic: boolean = false\n    ordering: string = 'manual';\n    deleting: boolean = false\n\n    oninit(vnode: any) {\n        super.oninit(vnode);\n\n        if (this.attrs.list) {\n            this.name = this.attrs.list.name();\n            this.isPublic = this.attrs.list.isPublic();\n            this.ordering = this.attrs.list.ordering();\n        } else if (!app.forum.attribute('canCreatePrivateDiscussionLists')) {\n            this.isPublic = true;\n        }\n    }\n\n    className() {\n        return 'EditDiscussionListModal Modal--small';\n    }\n\n    title() {\n        return app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.title');\n    }\n\n    content() {\n        return m('.Modal-body', [\n            m('.Form-group', [\n                m('label', {\n                    for: 'edit-list-modal-name',\n                }, app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.name')),\n                m('input', {\n                    id: 'edit-list-modal-name',\n                    type: 'text',\n                    className: 'FormControl',\n                    value: this.name,\n                    onchange: (event: InputEvent) => {\n                        this.name = (event.target as HTMLInputElement).value;\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                Switch.component({\n                    state: this.isPublic,\n                    onchange: (checked: boolean) => {\n                        this.isPublic = checked;\n                    },\n                    disabled: app.forum.attribute('canCreatePublicDiscussionLists') !== app.forum.attribute('canCreatePrivateDiscussionLists'),\n                }, app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.isPublic')),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.ordering')),\n                Select.component({\n                    value: this.ordering,\n                    onchange: (value: string) => {\n                        this.ordering = value;\n                    },\n                    options: {\n                        manual: app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.orderingOptions.manual'),\n                        'created:asc': app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.orderingOptions.createdAsc'),\n                        'created:desc': app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.orderingOptions.createdDesc'),\n                        'added:asc': app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.orderingOptions.addedAsc'),\n                        'added:desc': app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.orderingOptions.addedDesc'),\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                Button.component({\n                    type: 'submit',\n                    className: 'Button Button--primary EditDiscussionListModal-save',\n                    loading: this.loading,\n                }, app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.save')),\n                this.attrs.list ? Button.component({\n                    type: 'button',\n                    className: 'Button EditDiscussionListModal-delete',\n                    onclick: () => {\n                        if (!confirm(extractText(app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.deleteConfirmation')))) {\n                            return;\n                        }\n\n                        this.deleting = true;\n\n                        this.attrs.list!.delete({\n                            errorHandler: this.onerror.bind(this),\n                        }).then(() => {\n                            this.hide();\n\n                            if (this.attrs.ondelete) {\n                                this.attrs.ondelete();\n                            }\n                        }, () => {\n                            this.deleting = false;\n                            m.redraw();\n                        });\n                    },\n                }, app.translator.trans('clarkwinkelmann-discussion-lists.forum.edit.delete')) : null,\n            ]),\n        ]);\n    }\n\n    onsubmit(event: Event) {\n        event.preventDefault();\n\n        this.loading = true;\n\n        (this.attrs.list || app.store.createRecord('discussion-lists')).save({\n            name: this.name,\n            isPublic: this.isPublic,\n            ordering: this.ordering,\n        }, {\n            errorHandler: this.onerror.bind(this),\n        }).then(() => {\n            this.hide();\n\n            if (this.attrs.onsave) {\n                this.attrs.onsave();\n            }\n        }, () => {\n            this.loading = false;\n            m.redraw();\n        });\n    }\n}\n","import app from 'flarum/forum/app';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport icon from 'flarum/common/helpers/icon';\nimport Discussion from 'flarum/common/models/Discussion';\nimport Button from 'flarum/common/components/Button';\nimport Link from 'flarum/common/components/Link';\nimport {ApiPayloadSingle} from 'flarum/common/Store';\nimport EditListModal from './EditListModal';\nimport DiscussionList from '../models/DiscussionList';\n\nexport interface ListDropdownItemAttrs extends ComponentAttrs {\n    discussion: Discussion\n    list: DiscussionList\n    ondelete: () => void\n}\n\nexport default class ListDropdownItem extends Component<ListDropdownItemAttrs> {\n    loading: boolean = false\n\n    view() {\n        const {list, discussion} = this.attrs;\n\n        const active = (list.discussions() || []).indexOf(discussion) !== -1;\n\n        return m('li', [\n            Button.component({\n                onclick: () => {\n                    this.loading = true;\n\n                    app.request<ApiPayloadSingle>({\n                        url: app.forum.attribute('apiUrl') + '/discussion-lists/' + list.id() + '/discussions/' + discussion.id(),\n                        method: active ? 'DELETE' : 'POST',\n                    }).then(payload => {\n                        // Will refresh the list of included discussions\n                        app.store.pushPayload(payload);\n\n                        this.loading = false;\n                        m.redraw();\n                    }).catch(error => {\n                        this.loading = false;\n                        m.redraw();\n\n                        throw error;\n                    });\n                },\n            }, icon(this.icon(active))),\n            Link.component({\n                href: app.route('discussionList', {\n                    list: list.id(),\n                }),\n            }, [\n                list.name(),\n                list.isPublic() ? null : [\n                    ' ',\n                    m('span.discussion-list-private', icon('fas fa-lock')),\n                ],\n            ]),\n            Button.component({\n                onclick: () => {\n                    app.modal.show(EditListModal, {\n                        list,\n                        ondelete: this.attrs.ondelete,\n                    });\n                },\n            }, icon('fas fa-pen')),\n        ]);\n    }\n\n    icon(active: boolean) {\n        if (this.loading) {\n            return 'fas fa-spinner fa-pulse';\n        }\n\n        if (active) {\n            return 'far fa-check-square';\n        }\n\n        return 'far fa-square';\n    }\n}\n","import app from 'flarum/forum/app';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Discussion from 'flarum/common/models/Discussion';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Button from 'flarum/common/components/Button';\nimport ListDropdownItem from './ListDropdownItem';\nimport DiscussionList from '../models/DiscussionList';\nimport EditListModal from './EditListModal';\n\nexport interface ListDropdownContentAttrs extends ComponentAttrs {\n    discussion: Discussion\n}\n\nexport default class ListDropdownContent extends Component<ListDropdownContentAttrs> {\n    lists!: DiscussionList[]\n    loading: boolean = true\n\n    oninit(vnode: any) {\n        super.oninit(vnode);\n\n        this.refresh();\n    }\n\n    refresh() {\n        this.loading = true;\n\n        app.store.find<DiscussionList[]>('discussion-lists', {\n            filter: {\n                user: app.session.user!.slug(),\n            },\n        }).then(lists => {\n            this.lists = lists;\n            this.loading = false;\n            m.redraw();\n        });\n    }\n\n    view() {\n        if (this.loading) {\n            return [\n                LoadingIndicator.component(),\n            ];\n        }\n\n        return [\n            ...this.lists.map(list => m(ListDropdownItem, {\n                discussion: this.attrs.discussion,\n                list,\n                ondelete: () => {\n                    this.refresh();\n                },\n            })),\n            Button.component({\n                onclick: () => {\n                    app.modal.show(EditListModal, {\n                        onsave: () => {\n                            this.refresh();\n                        },\n                    });\n                },\n                icon: 'fas fa-plus',\n            }, app.translator.trans('clarkwinkelmann-discussion-lists.forum.discussion.new')),\n        ];\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Dropdown'];","import Dropdown from 'flarum/common/components/Dropdown';\n\nexport default class DropdownThatStaysOpen extends Dropdown {\n    getMenu(items: any) {\n        const vdom = super.getMenu(items);\n\n        // Prevent the dropdown from closing when clicks happen inside if it\n        (vdom.attrs as any).onclick = function (event: MouseEvent) {\n            event.stopPropagation();\n\n            event.redraw = false;\n        };\n\n        return vdom;\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/DiscussionListState'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/states/GlobalSearchState'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionList'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/DiscussionListItem'];","const __WEBPACK_NAMESPACE_OBJECT__ = ((flarum.extensions['flamarkt-backoffice']||{})['common']||{})['components/Sortable'];","const __WEBPACK_NAMESPACE_OBJECT__ = ((flarum.extensions['flamarkt-backoffice']||{})['common']||{})['components/SortableHandle'];","import app from 'flarum/forum/app';\nimport Component, {ComponentAttrs} from 'flarum/common/Component';\nimport Button from 'flarum/common/components/Button';\nimport icon from 'flarum/common/helpers/icon';\nimport DiscussionList from '../models/DiscussionList';\nimport EditListModal from './EditListModal';\n\ninterface ListHeroAttrs extends ComponentAttrs {\n    list: DiscussionList\n}\n\nexport default class ListHero extends Component<ListHeroAttrs> {\n    view() {\n        const {list} = this.attrs;\n\n        return m('header.Hero.ListHero', m('.container', m('.containerNarrow', [\n            m('h2.Hero-title', [\n                list.name(),\n                list.isPublic() ? null : [\n                    ' ',\n                    m('span.discussion-list-private', icon('fas fa-lock')),\n                ],\n            ]),\n            list.canEdit() ? Button.component({\n                onclick() {\n                    app.modal.show(EditListModal, {\n                        list,\n                        onsave() {\n                            app.discussions.refresh();\n                        },\n                        ondelete() {\n                            m.route.set(app.route('index'));\n                        },\n                    });\n                },\n            }, 'Edit') : null,\n        ])));\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LinkButton'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserPage'];","import app from 'flarum/forum/app';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Link from 'flarum/common/components/Link';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport icon from 'flarum/common/helpers/icon';\nimport DiscussionList from '../models/DiscussionList';\n\nexport default class ListsUserPage extends UserPage {\n    lists: DiscussionList[] = []\n    loading: boolean = false\n\n    oninit(vnode: any) {\n        super.oninit(vnode);\n\n        this.loadUser(m.route.param('username'));\n    }\n\n    show(user: any) {\n        super.show(user);\n\n        this.refresh();\n    }\n\n    refresh() {\n        this.loading = true;\n        this.lists = [];\n\n        m.redraw();\n\n        app.store.find<DiscussionList[]>('discussion-lists', {\n            filter: {\n                user: this.user.slug(),\n            },\n        }).then(lists => {\n            this.lists = lists;\n            this.loading = false;\n            m.redraw();\n        }, () => {\n            this.loading = false;\n            m.redraw();\n        });\n    }\n\n    content() {\n        if (this.loading) {\n            return LoadingIndicator.component();\n        }\n\n        return m('ul', this.lists.map(list => m('li', Link.component({\n            href: app.route('discussionList', {\n                list: list.id(),\n            }),\n        }, [\n            list.name(),\n            list.isPublic() ? null : [\n                ' ',\n                m('span.discussion-list-private', icon('fas fa-lock')),\n            ],\n            ' ',\n            m('span.discussion-list-count', '(' + list.discussionCount() + ')'),\n        ]))));\n    }\n}\n","import app from 'flarum/forum/app';\nimport DiscussionList from './models/DiscussionList';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport addDiscussionControl from './addDiscussionControl';\nimport addIndexPage from './addIndexPage';\nimport addProfilePage from './addProfilePage';\n\napp.initializers.add('clarkwinkelmann-discussion-lists', () => {\n    app.store.models['discussion-lists'] = DiscussionList;\n\n    app.routes.discussionList = { path: '/discussion-lists/:list', component: IndexPage };\n\n    addDiscussionControl();\n    addIndexPage();\n    addProfilePage();\n});\n","import {extend} from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\nimport ListDropdownContent from './components/ListDropdownContent';\nimport DropdownThatStaysOpen from './components/DropdownThatStaysOpen';\n\nfunction listsSupported() {\n    if (!app.session.user) {\n        return false;\n    }\n\n    return app.forum.attribute('canCreatePublicDiscussionLists') || app.forum.attribute('canCreatePrivateDiscussionLists');\n}\n\nexport default function () {\n    // Control visible on the discussion page\n    extend(DiscussionPage.prototype, 'sidebarItems', function (items) {\n        if (!listsSupported()) {\n            return;\n        }\n\n        items.add('lists', DropdownThatStaysOpen.component({\n            buttonClassName: 'Button',\n            icon: 'fas fa-list-ol',\n            label: app.translator.trans('clarkwinkelmann-discussion-lists.forum.discussion.add'),\n            lazyDraw: true,\n        }, m(ListDropdownContent, {\n            discussion: this.discussion,\n        })), 75);\n    });\n}\n","import app from 'flarum/forum/app';\nimport type Mithril from 'mithril';\nimport {extend, override} from 'flarum/common/extend';\nimport {ApiPayloadSingle} from 'flarum/common/Store';\nimport Discussion from 'flarum/common/models/Discussion';\nimport {ComponentAttrs} from 'flarum/common/Component';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport DiscussionListState from 'flarum/forum/states/DiscussionListState';\nimport GlobalSearchState from 'flarum/forum/states/GlobalSearchState';\nimport DiscussionList from 'flarum/forum/components/DiscussionList';\nimport DiscussionListItem from 'flarum/forum/components/DiscussionListItem';\nimport Sortable from 'flamarkt/backoffice/common/components/Sortable';\nimport SortableHandle from 'flamarkt/backoffice/common/components/SortableHandle';\nimport ListHero from './components/ListHero';\nimport ListModel from './models/DiscussionList';\n\n// Implementation based on Tag's addTagFilter\nexport default function () {\n    IndexPage.prototype.currentList = function () {\n        if (this.currentActiveList) {\n            return this.currentActiveList;\n        }\n\n        const id = app.search.params().list;\n\n        if (!id) {\n            return null;\n        }\n\n        const list = app.store.getById('discussion-lists', id);\n\n        if (list) {\n            this.currentActiveList = list;\n            return this.currentActiveList;\n        }\n\n        if (this.currentListLoading) {\n            return null;\n        }\n\n        this.currentListLoading = true;\n\n        app.store\n            .find('discussion-lists', id)\n            .then(list => {\n                this.currentActiveList = list;\n\n                m.redraw();\n            })\n            .finally(() => {\n                this.currentListLoading = false;\n            });\n\n        return null;\n    };\n\n    override(IndexPage.prototype, 'hero', function (original) {\n        const list = this.currentList();\n\n        if (!list) {\n            return original();\n        }\n\n        return m(ListHero, {\n            list,\n        });\n    });\n\n    extend(IndexPage.prototype, 'view', function (vdom: Mithril.Vnode<ComponentAttrs, {}>) {\n        const list = this.currentList();\n\n        if (!list) {\n            return;\n        }\n\n        (vdom.attrs as any).className += ' IndexPage--list' + list.id();\n    });\n\n    extend(IndexPage.prototype, 'setTitle', function () {\n        const list = this.currentList();\n\n        if (list) {\n            app.setTitle(list.name());\n        }\n    });\n\n    extend(GlobalSearchState.prototype, 'params', function (params) {\n        params.list = m.route.param('list');\n    });\n\n    extend(DiscussionListState.prototype, 'requestParams', function (this: DiscussionListState, params) {\n        if (this.params.list) {\n            const filter = params.filter ?? {};\n            filter.list = this.params.list;\n            const q = filter.q;\n            if (q) {\n                filter.q = `${q} list:${this.params.list}`;\n            }\n            params.filter = filter;\n\n            // Push page limit to the maximum to allow for manual sorting\n            const page = params.page ?? {};\n            page.limit = 50;\n            params.page = page;\n        }\n    });\n\n    override(DiscussionListState.prototype, 'sortMap', function (this: DiscussionListState, original) {\n        const originalMap = original();\n\n        if (!this.params.list) {\n            return originalMap;\n        }\n\n        const newList: any = {\n            discussionListDefault: '',\n        };\n\n        Object.keys(originalMap).forEach(key => {\n            if (originalMap[key]) {\n                newList[key] = originalMap[key];\n            }\n        });\n\n        return newList;\n    });\n\n    override(DiscussionList.prototype, 'view', function (this: any, original) {\n        const vdom = original() as any;\n\n        const state = this.attrs.state as DiscussionListState;\n\n        // If not on the lists page, change nothing\n        if (!state.getParams().list) {\n            return vdom;\n        }\n\n        const list = app.store.getById<ListModel>('discussion-lists', state.getParams().list);\n\n        if (!list || list.ordering() !== 'manual' || !list.canEdit()) {\n            return vdom;\n        }\n\n        // If the vdom doesn't look like a fully rendered feed, keep is like original\n        if (!vdom.children.length || !vdom.children[0] && !vdom.children[0].attrs && vdom.children[0].attrs.role !== 'feed') {\n            return vdom;\n        }\n\n        const sortableChildren: any = [];\n\n        // We need to flatten the children for use in Sortable\n        vdom.children[0].children.forEach(child => {\n            if (!child) {\n                return;\n            }\n\n            if (child.tag === '[') {\n                sortableChildren.push(...child.children);\n            } else {\n                sortableChildren.push(child);\n            }\n        });\n\n        return m('div', {\n            className: vdom.attrs.className,\n        }, {\n            // Manually build the component for Sortable in the vdom\n            // So we can apply the existing children\n            tag: Sortable,\n            attrs: {\n                containerTag: 'ul[role=feed][aria-busy=false].' + (vdom.children[0].attrs.className).replace(' ', '.'),\n                placeholderTag: 'li.DiscussionListSortablePlaceholder',\n                onsort(origin: number, destination: number) {\n                    const allVisibleDiscussions: Discussion[] = ([] as Discussion[]).concat(...state.getPages().map(page => {\n                        return page.items;\n                    }));\n\n                    const discussion = allVisibleDiscussions[origin];\n\n                    if (discussion && list) {\n                        app.request<ApiPayloadSingle>({\n                            url: app.forum.attribute('apiUrl') + '/discussion-lists/' + list.id() + '/discussions/' + discussion.id(),\n                            method: 'POST',\n                            body: {\n                                order: destination + 1, // 0-based to 1-based\n                            },\n                        }).then(payload => {\n                            // Might not be necessary but we might as well do it in case you navigate back to a page that shows a summary with the discussion relationship\n                            app.store.pushPayload(payload);\n\n                            // This is a bit excessive to refresh the full list here but this is the easiest implementation\n                            app.discussions.refresh();\n                        });\n                    }\n                },\n            },\n            children: sortableChildren,\n        });\n    });\n\n    extend(DiscussionListItem.prototype, 'view', function (vdom) {\n        if (!this.attrs.params.list) {\n            return;\n        }\n\n        const list = app.store.getById<ListModel>('discussion-lists', this.attrs.params.list);\n\n        if (!list || list.ordering() !== 'manual' || !list.canEdit()) {\n            return vdom;\n        }\n\n        vdom.children.forEach(child => {\n            if (child && child.attrs && child.attrs.className.indexOf('DiscussionListItem-content') !== -1) {\n                child.children.unshift(m(SortableHandle, {\n                    className: 'DiscussionListSortableHandle',\n                }));\n            }\n        });\n    });\n}\n","import app from 'flarum/forum/app';\nimport {extend} from 'flarum/common/extend';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport ListsUserPage from './components/ListsUserPage';\n\nexport default function () {\n    app.routes['user.discussionLists'] = {path: '/u/:username/discussion-lists', component: ListsUserPage};\n\n    extend(UserPage.prototype, 'navItems', function (items) {\n        if (!this.user.attribute('discussionListsTabVisible')) {\n            return;\n        }\n\n        items.add('discussionLists', LinkButton.component({\n            href: app.route('user.discussionLists', {username: this.user.slug()}),\n            name: 'mentions',\n            icon: 'fas fa-list-ol',\n        }, app.translator.trans('clarkwinkelmann-discussion-lists.forum.profile.link')), 10);\n    });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","create","constructor","DiscussionList","name","Model","isPublic","ordering","discussionCount","canEdit","discussions","EditListModal","deleting","oninit","vnode","this","attrs","list","app","className","title","content","m","for","id","type","onchange","event","target","Switch","state","checked","disabled","Select","options","manual","Button","loading","onclick","confirm","extractText","errorHandler","onerror","then","hide","ondelete","redraw","onsubmit","preventDefault","save","onsave","Modal","ListDropdownItem","view","discussion","active","indexOf","url","method","payload","error","icon","Link","href","Component","ListDropdownContent","lists","refresh","filter","user","LoadingIndicator","map","DropdownThatStaysOpen","getMenu","items","vdom","stopPropagation","Dropdown","extensions","ListHero","route","set","ListsUserPage","loadUser","param","show","slug","UserPage","path","component","IndexPage","extend","DiscussionPage","add","buttonClassName","label","lazyDraw","currentActiveList","currentListLoading","override","original","currentList","GlobalSearchState","params","DiscussionListState","q","page","limit","originalMap","newList","discussionListDefault","keys","forEach","getParams","children","length","role","sortableChildren","child","tag","push","Sortable","containerTag","replace","placeholderTag","onsort","origin","destination","concat","getPages","body","order","DiscussionListItem","unshift","SortableHandle","attribute","LinkButton","username"],"sourceRoot":""}